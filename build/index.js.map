{"version":3,"file":"index.js","sources":["../node_modules/@vaadin/router/dist/vaadin-router.js","../node_modules/lit-html/lib/directive.js","../node_modules/lit-html/lib/dom.js","../node_modules/lit-html/lib/part.js","../node_modules/lit-html/lib/template.js","../node_modules/lit-html/lib/template-instance.js","../node_modules/lit-html/lib/template-result.js","../node_modules/lit-html/lib/parts.js","../node_modules/lit-html/lib/default-template-processor.js","../node_modules/lit-html/lib/template-factory.js","../node_modules/lit-html/lib/render.js","../node_modules/lit-html/lit-html.js","../node_modules/lit-html/lib/modify-template.js","../node_modules/lit-html/lib/shady-render.js","../node_modules/lit-element/lib/updating-element.js","../node_modules/lit-element/lib/decorators.js","../node_modules/lit-element/lib/css-tag.js","../node_modules/lit-element/lit-element.js","../node_modules/pwa-helpers/connect-mixin.js","../node_modules/pwa-helpers/lazy-reducer-enhancer.js","../node_modules/pwa-helpers/media-query.js","../node_modules/pwa-helpers/metadata.js","../node_modules/pwa-helpers/network.js","../node_modules/pwa-helpers/router.js","../node_modules/pwa-helpers/pwa-helpers.js","../src/redux/actions.js","../node_modules/symbol-observable/es/ponyfill.js","../node_modules/symbol-observable/es/index.js","../node_modules/redux/es/redux.js","../src/redux/reducer.js","../src/redux/store.js","../src/list-element.js","../src/fetcher-element.js","../src/stats-element.js","../src/about-element.js","../index.js"],"sourcesContent":["function toArray(objectOrArray) {\n  objectOrArray = objectOrArray || [];\n  return Array.isArray(objectOrArray) ? objectOrArray : [objectOrArray];\n}\n\nfunction log(msg) {\n  return `[Vaadin.Router] ${msg}`;\n}\n\nfunction logValue(value) {\n  if (typeof value !== 'object') {\n    return String(value);\n  }\n\n  const stringType = Object.prototype.toString.call(value).match(/ (.*)\\]$/)[1];\n  if (stringType === 'Object' || stringType === 'Array') {\n    return `${stringType} ${JSON.stringify(value)}`;\n  } else {\n    return stringType;\n  }\n}\n\nconst MODULE = 'module';\nconst NOMODULE = 'nomodule';\nconst bundleKeys = [MODULE, NOMODULE];\n\nfunction ensureBundle(src) {\n  if (!src.match(/.+\\.[m]?js$/)) {\n    throw new Error(\n      log(`Unsupported type for bundle \"${src}\": .js or .mjs expected.`)\n    );\n  }\n}\n\nfunction ensureRoute(route) {\n  if (!route || !isString(route.path)) {\n    throw new Error(\n      log(`Expected route config to be an object with a \"path\" string property, or an array of such objects`)\n    );\n  }\n\n  const bundle = route.bundle;\n\n  const stringKeys = ['component', 'redirect', 'bundle'];\n  if (\n    !isFunction(route.action) &&\n    !Array.isArray(route.children) &&\n    !isFunction(route.children) &&\n    !isObject(bundle) &&\n    !stringKeys.some(key => isString(route[key]))\n  ) {\n    throw new Error(\n      log(\n        `Expected route config \"${route.path}\" to include either \"${stringKeys.join('\", \"')}\" ` +\n        `or \"action\" function but none found.`\n      )\n    );\n  }\n\n  if (bundle) {\n    if (isString(bundle)) {\n      ensureBundle(bundle);\n    } else if (!bundleKeys.some(key => key in bundle)) {\n      throw new Error(\n        log('Expected route bundle to include either \"' + NOMODULE + '\" or \"' + MODULE + '\" keys, or both')\n      );\n    } else {\n      bundleKeys.forEach(key => key in bundle && ensureBundle(bundle[key]));\n    }\n  }\n\n  if (route.redirect) {\n    ['bundle', 'component'].forEach(overriddenProp => {\n      if (overriddenProp in route) {\n        console.warn(\n          log(\n            `Route config \"${route.path}\" has both \"redirect\" and \"${overriddenProp}\" properties, ` +\n            `and \"redirect\" will always override the latter. Did you mean to only use \"${overriddenProp}\"?`\n          )\n        );\n      }\n    });\n  }\n}\n\nfunction ensureRoutes(routes) {\n  toArray(routes).forEach(route => ensureRoute(route));\n}\n\nfunction loadScript(src, key) {\n  let script = document.head.querySelector('script[src=\"' + src + '\"][async]');\n  if (!script) {\n    script = document.createElement('script');\n    script.setAttribute('src', src);\n    if (key === MODULE) {\n      script.setAttribute('type', MODULE);\n    } else if (key === NOMODULE) {\n      script.setAttribute(NOMODULE, '');\n    }\n    script.async = true;\n  }\n  return new Promise((resolve, reject) => {\n    script.onreadystatechange = script.onload = e => {\n      script.__dynamicImportLoaded = true;\n      resolve(e);\n    };\n    script.onerror = e => {\n      if (script.parentNode) {\n        script.parentNode.removeChild(script);\n      }\n      reject(e);\n    };\n    if (script.parentNode === null) {\n      document.head.appendChild(script);\n    } else if (script.__dynamicImportLoaded) {\n      resolve();\n    }\n  });\n}\n\nfunction loadBundle(bundle) {\n  if (isString(bundle)) {\n    return loadScript(bundle);\n  } else {\n    return Promise.race(\n      bundleKeys\n        .filter(key => key in bundle)\n        .map(key => loadScript(bundle[key], key))\n    );\n  }\n}\n\nfunction fireRouterEvent(type, detail) {\n  return !window.dispatchEvent(new CustomEvent(\n    `vaadin-router-${type}`,\n    {cancelable: type === 'go', detail}\n  ));\n}\n\nfunction isObject(o) {\n  // guard against null passing the typeof check\n  return typeof o === 'object' && !!o;\n}\n\nfunction isFunction(f) {\n  return typeof f === 'function';\n}\n\nfunction isString(s) {\n  return typeof s === 'string';\n}\n\nfunction getNotFoundError(context) {\n  const error = new Error(log(`Page not found (${context.pathname})`));\n  error.context = context;\n  error.code = 404;\n  return error;\n}\n\nconst notFoundResult = new (class NotFoundResult {})();\n\n/* istanbul ignore next: coverage is calculated in Chrome, this code is for IE */\nfunction getAnchorOrigin(anchor) {\n  // IE11: on HTTP and HTTPS the default port is not included into\n  // window.location.origin, so won't include it here either.\n  const port = anchor.port;\n  const protocol = anchor.protocol;\n  const defaultHttp = protocol === 'http:' && port === '80';\n  const defaultHttps = protocol === 'https:' && port === '443';\n  const host = (defaultHttp || defaultHttps)\n    ? anchor.hostname // does not include the port number (e.g. www.example.org)\n    : anchor.host; // does include the port number (e.g. www.example.org:80)\n  return `${protocol}//${host}`;\n}\n\n// The list of checks is not complete:\n//  - SVG support is missing\n//  - the 'rel' attribute is not considered\nfunction vaadinRouterGlobalClickHandler(event) {\n  // ignore the click if the default action is prevented\n  if (event.defaultPrevented) {\n    return;\n  }\n\n  // ignore the click if not with the primary mouse button\n  if (event.button !== 0) {\n    return;\n  }\n\n  // ignore the click if a modifier key is pressed\n  if (event.shiftKey || event.ctrlKey || event.altKey || event.metaKey) {\n    return;\n  }\n\n  // find the <a> element that the click is at (or within)\n  let anchor = event.target;\n  const path = event.composedPath\n    ? event.composedPath()\n    : (event.path || []);\n\n  // FIXME(web-padawan): `Symbol.iterator` used by webcomponentsjs is broken for arrays\n  // example to check: `for...of` loop here throws the \"Not yet implemented\" error\n  for (let i = 0; i < path.length; i++) {\n    const target = path[i];\n    if (target.nodeName && target.nodeName.toLowerCase() === 'a') {\n      anchor = target;\n      break;\n    }\n  }\n\n  while (anchor && anchor.nodeName.toLowerCase() !== 'a') {\n    anchor = anchor.parentNode;\n  }\n\n  // ignore the click if not at an <a> element\n  if (!anchor || anchor.nodeName.toLowerCase() !== 'a') {\n    return;\n  }\n\n  // ignore the click if the <a> element has a non-default target\n  if (anchor.target && anchor.target.toLowerCase() !== '_self') {\n    return;\n  }\n\n  // ignore the click if the <a> element has the 'download' attribute\n  if (anchor.hasAttribute('download')) {\n    return;\n  }\n\n  // ignore the click if the target URL is a fragment on the current page\n  if (anchor.pathname === window.location.pathname && anchor.hash !== '') {\n    return;\n  }\n\n  // ignore the click if the target is external to the app\n  // In IE11 HTMLAnchorElement does not have the `origin` property\n  const origin = anchor.origin || getAnchorOrigin(anchor);\n  if (origin !== window.location.origin) {\n    return;\n  }\n\n  // if none of the above, convert the click into a navigation event\n  if (fireRouterEvent('go', {pathname: anchor.pathname})) {\n    event.preventDefault();\n  }\n}\n\n/**\n * A navigation trigger for Vaadin Router that translated clicks on `<a>` links\n * into Vaadin Router navigation events.\n *\n * Only regular clicks on in-app links are translated (primary mouse button, no\n * modifier keys, the target href is within the app's URL space).\n *\n * @memberOf Vaadin.Router.Triggers\n * @type {NavigationTrigger}\n */\nconst CLICK = {\n  activate() {\n    window.document.addEventListener('click', vaadinRouterGlobalClickHandler);\n  },\n\n  inactivate() {\n    window.document.removeEventListener('click', vaadinRouterGlobalClickHandler);\n  }\n};\n\n// PopStateEvent constructor shim\nconst isIE = /Trident/.test(navigator.userAgent);\n\n/* istanbul ignore next: coverage is calculated in Chrome, this code is for IE */\nif (isIE && !isFunction(window.PopStateEvent)) {\n  window.PopStateEvent = function(inType, params) {\n    params = params || {};\n    var e = document.createEvent('Event');\n    e.initEvent(inType, Boolean(params.bubbles), Boolean(params.cancelable));\n    e.state = params.state || null;\n    return e;\n  };\n  window.PopStateEvent.prototype = window.Event.prototype;\n}\n\nfunction vaadinRouterGlobalPopstateHandler(event) {\n  if (event.state === 'vaadin-router-ignore') {\n    return;\n  }\n  fireRouterEvent('go', {pathname: window.location.pathname});\n}\n\n/**\n * A navigation trigger for Vaadin Router that translates popstate events into\n * Vaadin Router navigation events.\n *\n * @memberOf Vaadin.Router.Triggers\n * @type {NavigationTrigger}\n */\nconst POPSTATE = {\n  activate() {\n    window.addEventListener('popstate', vaadinRouterGlobalPopstateHandler);\n  },\n\n  inactivate() {\n    window.removeEventListener('popstate', vaadinRouterGlobalPopstateHandler);\n  }\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar pathToRegexp_1 = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * Default configs.\n */\nvar DEFAULT_DELIMITER = '/';\nvar DEFAULT_DELIMITERS = './';\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\"]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined]\n  '(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = (options && options.delimiter) || DEFAULT_DELIMITER;\n  var delimiters = (options && options.delimiters) || DEFAULT_DELIMITERS;\n  var pathEscaped = false;\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) !== null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      pathEscaped = true;\n      continue\n    }\n\n    var prev = '';\n    var next = str[index];\n    var name = res[2];\n    var capture = res[3];\n    var group = res[4];\n    var modifier = res[5];\n\n    if (!pathEscaped && path.length) {\n      var k = path.length - 1;\n\n      if (delimiters.indexOf(path[k]) > -1) {\n        prev = path[k];\n        path = path.slice(0, k);\n      }\n    }\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n      pathEscaped = false;\n    }\n\n    var partial = prev !== '' && next !== undefined && next !== prev;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = prev || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prev,\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      pattern: pattern ? escapeGroup(pattern) : '[^' + escapeString(delimiter) + ']+?'\n    });\n  }\n\n  // Push any remaining characters.\n  if (path || index < str.length) {\n    tokens.push(path + str.substr(index));\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (data, options) {\n    var path = '';\n    var encode = (options && options.encode) || encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n        continue\n      }\n\n      var value = data ? data[token.name] : undefined;\n      var segment;\n\n      if (Array.isArray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but got array')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) continue\n\n          throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j], token);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\"')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        segment = encode(String(value), token);\n\n        if (!matches[i].test(segment)) {\n          throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but got \"' + segment + '\"')\n        }\n\n        path += token.prefix + segment;\n        continue\n      }\n\n      if (token.optional) {\n        // Prepend partial segment prefixes.\n        if (token.partial) path += token.prefix;\n\n        continue\n      }\n\n      throw new TypeError('Expected \"' + token.name + '\" to be ' + (token.repeat ? 'an array' : 'a string'))\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$/()])/g, '\\\\$1')\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options && options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {Array=}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  if (!keys) return path\n\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        pattern: null\n      });\n    }\n  }\n\n  return path\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  return new RegExp('(?:' + parts.join('|') + ')', flags(options))\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}  tokens\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var delimiter = escapeString(options.delimiter || DEFAULT_DELIMITER);\n  var delimiters = options.delimiters || DEFAULT_DELIMITERS;\n  var endsWith = [].concat(options.endsWith || []).map(escapeString).concat('$').join('|');\n  var route = '';\n  var isEndDelimited = tokens.length === 0;\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n      isEndDelimited = i === tokens.length - 1 && delimiters.indexOf(token[token.length - 1]) > -1;\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = token.repeat\n        ? '(?:' + token.pattern + ')(?:' + prefix + '(?:' + token.pattern + '))*'\n        : token.pattern;\n\n      if (keys) keys.push(token);\n\n      if (token.optional) {\n        if (token.partial) {\n          route += prefix + '(' + capture + ')?';\n        } else {\n          route += '(?:' + prefix + '(' + capture + '))?';\n        }\n      } else {\n        route += prefix + '(' + capture + ')';\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += '(?:' + delimiter + ')?';\n\n    route += endsWith === '$' ? '$' : '(?=' + endsWith + ')';\n  } else {\n    if (!strict) route += '(?:' + delimiter + '(?=' + endsWith + '))?';\n    if (!isEndDelimited) route += '(?=' + delimiter + '|' + endsWith + ')';\n  }\n\n  return new RegExp('^' + route, flags(options))\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {Array=}                keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, keys)\n  }\n\n  if (Array.isArray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), keys, options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), keys, options)\n}\npathToRegexp_1.parse = parse_1;\npathToRegexp_1.compile = compile_1;\npathToRegexp_1.tokensToFunction = tokensToFunction_1;\npathToRegexp_1.tokensToRegExp = tokensToRegExp_1;\n\n/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nconst {hasOwnProperty} = Object.prototype;\nconst cache = new Map();\n// see https://github.com/pillarjs/path-to-regexp/issues/148\ncache.set('|false', {\n  keys: [],\n  pattern: /(?:)/\n});\n\nfunction decodeParam(val) {\n  try {\n    return decodeURIComponent(val);\n  } catch (err) {\n    return val;\n  }\n}\n\nfunction matchPath(routepath, path, exact, parentKeys, parentParams) {\n  exact = !!exact;\n  const cacheKey = `${routepath}|${exact}`;\n  let regexp = cache.get(cacheKey);\n\n  if (!regexp) {\n    const keys = [];\n    regexp = {\n      keys,\n      pattern: pathToRegexp_1(routepath, keys, {\n        end: exact,\n        strict: routepath === ''\n      }),\n    };\n    cache.set(cacheKey, regexp);\n  }\n\n  const m = regexp.pattern.exec(path);\n  if (!m) {\n    return null;\n  }\n\n  const params = Object.assign({}, parentParams);\n\n  for (let i = 1; i < m.length; i++) {\n    const key = regexp.keys[i - 1];\n    const prop = key.name;\n    const value = m[i];\n    if (value !== undefined || !hasOwnProperty.call(params, prop)) {\n      if (key.repeat) {\n        params[prop] = value ? value.split(key.delimiter).map(decodeParam) : [];\n      } else {\n        params[prop] = value ? decodeParam(value) : value;\n      }\n    }\n  }\n\n  return {\n    path: m[0],\n    keys: (parentKeys || []).concat(regexp.keys),\n    params,\n  };\n}\n\n/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\n/**\n * Traverses the routes tree and matches its nodes to the given pathname from\n * the root down to the leaves. Each match consumes a part of the pathname and\n * the matching process continues for as long as there is a matching child\n * route for the remaining part of the pathname.\n *\n * The returned value is a lazily evaluated iterator.\n *\n * The leading \"/\" in a route path matters only for the root of the routes\n * tree (or if all parent routes are \"\"). In all other cases a leading \"/\" in\n * a child route path has no significance.\n *\n * The trailing \"/\" in a _route path_ matters only for the leaves of the\n * routes tree. A leaf route with a trailing \"/\" matches only a pathname that\n * also has a trailing \"/\".\n *\n * The trailing \"/\" in a route path does not affect matching of child routes\n * in any way.\n *\n * The trailing \"/\" in a _pathname_ generally does not matter (except for\n * the case of leaf nodes described above).\n *\n * The \"\" and \"/\" routes have special treatment:\n *  1. as a single route\n *     the \"\" and \"/\" routes match only the \"\" and \"/\" pathnames respectively\n *  2. as a parent in the routes tree\n *     the \"\" route matches any pathname without consuming any part of it\n *     the \"/\" route matches any absolute pathname consuming its leading \"/\"\n *  3. as a leaf in the routes tree\n *     the \"\" and \"/\" routes match only if the entire pathname is consumed by\n *         the parent routes chain. In this case \"\" and \"/\" are equivalent.\n *  4. several directly nested \"\" or \"/\" routes\n *     - directly nested \"\" or \"/\" routes are 'squashed' (i.e. nesting two\n *       \"/\" routes does not require a double \"/\" in the pathname to match)\n *     - if there are only \"\" in the parent routes chain, no part of the\n *       pathname is consumed, and the leading \"/\" in the child routes' paths\n *       remains significant\n *\n * Side effect:\n *   - the routes tree { path: '' } matches only the '' pathname\n *   - the routes tree { path: '', children: [ { path: '' } ] } matches any\n *     pathname (for the tree root)\n *\n * Prefix matching can be enabled also by `children: true`.\n */\nfunction matchRoute(route, pathname, ignoreLeadingSlash, parentKeys, parentParams) {\n  let match;\n  let childMatches;\n  let childIndex = 0;\n  let routepath = route.path || '';\n  if (routepath.charAt(0) === '/') {\n    if (ignoreLeadingSlash) {\n      routepath = routepath.substr(1);\n    }\n    ignoreLeadingSlash = true;\n  }\n\n  return {\n    next(routeToSkip) {\n      if (route === routeToSkip) {\n        return {done: true};\n      }\n\n      const children = route.__children = route.__children || route.children;\n\n      if (!match) {\n        match = matchPath(routepath, pathname, !children, parentKeys, parentParams);\n\n        if (match) {\n          return {\n            done: false,\n            value: {\n              route,\n              keys: match.keys,\n              params: match.params,\n              path: match.path\n            },\n          };\n        }\n      }\n\n      if (match && children) {\n        while (childIndex < children.length) {\n          if (!childMatches) {\n            const childRoute = children[childIndex];\n            childRoute.parent = route;\n\n            let matchedLength = match.path.length;\n            if (matchedLength > 0 && pathname.charAt(matchedLength) === '/') {\n              matchedLength += 1;\n            }\n\n            childMatches = matchRoute(\n              childRoute,\n              pathname.substr(matchedLength),\n              ignoreLeadingSlash,\n              match.keys,\n              match.params\n            );\n          }\n\n          const childMatch = childMatches.next(routeToSkip);\n          if (!childMatch.done) {\n            return {\n              done: false,\n              value: childMatch.value,\n            };\n          }\n\n          childMatches = null;\n          childIndex++;\n        }\n      }\n\n      return {done: true};\n    },\n  };\n}\n\n/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nfunction resolveRoute(context) {\n  if (isFunction(context.route.action)) {\n    return context.route.action(context);\n  }\n  return undefined;\n}\n\n/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nfunction isChildRoute(parentRoute, childRoute) {\n  let route = childRoute;\n  while (route) {\n    route = route.parent;\n    if (route === parentRoute) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction generateErrorMessage(currentContext) {\n  let errorMessage = `Path '${currentContext.pathname}' is not properly resolved due to an error.`;\n  const routePath = (currentContext.route || {}).path;\n  if (routePath) {\n    errorMessage += ` Resolution had failed on route: '${routePath}'`;\n  }\n  return errorMessage;\n}\n\nfunction addRouteToChain(context, match) {\n  const {route, path} = match;\n  function shouldDiscardOldChain(oldChain, route) {\n    return !route.parent || !oldChain || !oldChain.length || oldChain[oldChain.length - 1].route !== route.parent;\n  }\n\n  if (route && !route.__synthetic) {\n    const item = {path, route};\n    if (shouldDiscardOldChain(context.chain, route)) {\n      context.chain = [item];\n    } else {\n      context.chain.push(item);\n    }\n  }\n}\n\n/**\n * @memberof Vaadin\n */\nclass Resolver {\n  constructor(routes, options = {}) {\n    if (Object(routes) !== routes) {\n      throw new TypeError('Invalid routes');\n    }\n\n    this.baseUrl = options.baseUrl || '';\n    this.errorHandler = options.errorHandler;\n    this.resolveRoute = options.resolveRoute || resolveRoute;\n    this.context = Object.assign({resolver: this}, options.context);\n    this.root = Array.isArray(routes) ? {path: '', __children: routes, parent: null, __synthetic: true} : routes;\n    this.root.parent = null;\n  }\n\n  /**\n   * Returns the current list of routes (as a shallow copy). Adding / removing\n   * routes to / from the returned array does not affect the routing config,\n   * but modifying the route objects does.\n   *\n   * @return {!Array<!Route>}\n   */\n  getRoutes() {\n    return [...this.root.__children];\n  }\n\n  /**\n   * Sets the routing config (replacing the existing one).\n   *\n   * @param {!Array<!Route>|!Route} routes a single route or an array of those\n   *    (the array is shallow copied)\n   */\n  setRoutes(routes) {\n    ensureRoutes(routes);\n    const newRoutes = [...toArray(routes)];\n    this.root.__children = newRoutes;\n  }\n\n  /**\n   * Appends one or several routes to the routing config and returns the\n   * effective routing config after the operation.\n   *\n   * @param {!Array<!Route>|!Route} routes a single route or an array of those\n   *    (the array is shallow copied)\n   * @return {!Array<!Route>}\n   * @protected\n   */\n  addRoutes(routes) {\n    ensureRoutes(routes);\n    this.root.__children.push(...toArray(routes));\n    return this.getRoutes();\n  }\n\n  /**\n   * Removes all existing routes from the routing config.\n   */\n  removeRoutes() {\n    this.setRoutes([]);\n  }\n\n  /**\n   * Asynchronously resolves the given pathname, i.e. finds all routes matching\n   * the pathname and tries resolving them one after another in the order they\n   * are listed in the routes config until the first non-null result.\n   *\n   * Returns a promise that is fulfilled with the return value of an object that consists of the first\n   * route handler result that returns something other than `null` or `undefined` and context used to get this result.\n   *\n   * If no route handlers return a non-null result, or if no route matches the\n   * given pathname the returned promise is rejected with a 'page not found'\n   * `Error`.\n   *\n   * @param {!string|!{pathname: !string}} pathnameOrContext the pathname to\n   *    resolve or a context object with a `pathname` property and other\n   *    properties to pass to the route resolver functions.\n   * @return {!Promise<any>}\n   */\n  resolve(pathnameOrContext) {\n    const context = Object.assign(\n      {},\n      this.context,\n      isString(pathnameOrContext) ? {pathname: pathnameOrContext} : pathnameOrContext\n    );\n    const match = matchRoute(\n      this.root,\n      this.__normalizePathname(context.pathname),\n      this.baseUrl\n    );\n    const resolve = this.resolveRoute;\n    let matches = null;\n    let nextMatches = null;\n    let currentContext = context;\n\n    function next(resume, parent = matches.value.route, prevResult) {\n      const routeToSkip = prevResult === null && matches.value.route;\n      matches = nextMatches || match.next(routeToSkip);\n      nextMatches = null;\n\n      if (!resume) {\n        if (matches.done || !isChildRoute(parent, matches.value.route)) {\n          nextMatches = matches;\n          return Promise.resolve(notFoundResult);\n        }\n      }\n\n      if (matches.done) {\n        return Promise.reject(getNotFoundError(context));\n      }\n\n      addRouteToChain(context, matches.value);\n      currentContext = Object.assign({}, context, matches.value);\n\n      return Promise.resolve(resolve(currentContext)).then(resolution => {\n        if (resolution !== null && resolution !== undefined && resolution !== notFoundResult) {\n          currentContext.result = resolution.result || resolution;\n          return currentContext;\n        }\n        return next(resume, parent, resolution);\n      });\n    }\n\n    context.next = next;\n\n    return Promise.resolve()\n      .then(() => next(true, this.root))\n      .catch((error) => {\n        const errorMessage = generateErrorMessage(currentContext);\n        if (!error) {\n          error = new Error(errorMessage);\n        } else {\n          console.warn(errorMessage);\n        }\n        error.context = error.context || currentContext;\n        // DOMException has its own code which is read-only\n        if (!(error instanceof DOMException)) {\n          error.code = error.code || 500;\n        }\n        if (this.errorHandler) {\n          currentContext.result = this.errorHandler(error);\n          return currentContext;\n        }\n        throw error;\n      });\n  }\n\n  /**\n   * URL constructor polyfill hook. Creates and returns an URL instance.\n   */\n  static __createUrl(url, base) {\n    return new URL(url, base);\n  }\n\n  /**\n   * If the baseUrl property is set, transforms the baseUrl and returns the full\n   * actual `base` string for using in the `new URL(path, base);` and for\n   * prepernding the paths with. The returned base ends with a trailing slash.\n   *\n   * Otherwise, returns empty string.\n   */\n  get __effectiveBaseUrl() {\n    return this.baseUrl\n      ? this.constructor.__createUrl(\n        this.baseUrl,\n        document.baseURI || document.URL\n      ).href.replace(/[^\\/]*$/, '')\n      : '';\n  }\n\n  /**\n   * If the baseUrl is set, matches the pathname with the router’s baseUrl,\n   * and returns the local pathname with the baseUrl stripped out.\n   *\n   * If the pathname does not match the baseUrl, returns undefined.\n   *\n   * If the `baseUrl` is not set, returns the unmodified pathname argument.\n   */\n  __normalizePathname(pathname) {\n    if (!this.baseUrl) {\n      // No base URL, no need to transform the pathname.\n      return pathname;\n    }\n\n    const base = this.__effectiveBaseUrl;\n    const normalizedUrl = this.constructor.__createUrl(pathname, base).href;\n    if (normalizedUrl.slice(0, base.length) === base) {\n      return normalizedUrl.slice(base.length);\n    }\n  }\n}\n\nResolver.pathToRegexp = pathToRegexp_1;\n\n/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nconst {pathToRegexp: pathToRegexp$1} = Resolver;\nconst cache$1 = new Map();\n\nfunction cacheRoutes(routesByName, route, routes) {\n  const name = route.name || route.component;\n  if (name) {\n    if (routesByName.has(name)) {\n      routesByName.get(name).push(route);\n    } else {\n      routesByName.set(name, [route]);\n    }\n  }\n\n  if (Array.isArray(routes)) {\n    for (let i = 0; i < routes.length; i++) {\n      const childRoute = routes[i];\n      childRoute.parent = route;\n      cacheRoutes(routesByName, childRoute, childRoute.__children || childRoute.children);\n    }\n  }\n}\n\nfunction getRouteByName(routesByName, routeName) {\n  const routes = routesByName.get(routeName);\n  if (routes && routes.length > 1) {\n    throw new Error(\n      `Duplicate route with name \"${routeName}\".`\n      + ` Try seting unique 'name' route properties.`\n    );\n  }\n  return routes && routes[0];\n}\n\nfunction getRoutePath(route) {\n  let path = route.path;\n  path = Array.isArray(path) ? path[0] : path;\n  return path !== undefined ? path : '';\n}\n\nfunction generateUrls(router, options = {}) {\n  if (!(router instanceof Resolver)) {\n    throw new TypeError('An instance of Resolver is expected');\n  }\n\n  const routesByName = new Map();\n\n  return (routeName, params) => {\n    let route = getRouteByName(routesByName, routeName);\n    if (!route) {\n      routesByName.clear(); // clear cache\n      cacheRoutes(routesByName, router.root, router.root.__children);\n\n      route = getRouteByName(routesByName, routeName);\n      if (!route) {\n        throw new Error(`Route \"${routeName}\" not found`);\n      }\n    }\n\n    let regexp = cache$1.get(route.fullPath);\n    if (!regexp) {\n      let fullPath = getRoutePath(route);\n      let rt = route.parent;\n      while (rt) {\n        const path = getRoutePath(rt);\n        if (path) {\n          fullPath = path.replace(/\\/$/, '') + '/' + fullPath.replace(/^\\//, '');\n        }\n        rt = rt.parent;\n      }\n      const tokens = pathToRegexp$1.parse(fullPath);\n      const toPath = pathToRegexp$1.tokensToFunction(tokens);\n      const keys = Object.create(null);\n      for (let i = 0; i < tokens.length; i++) {\n        if (!isString(tokens[i])) {\n          keys[tokens[i].name] = true;\n        }\n      }\n      regexp = {toPath, keys};\n      cache$1.set(fullPath, regexp);\n      route.fullPath = fullPath;\n    }\n\n    let url = regexp.toPath(params, options) || '/';\n\n    if (options.stringifyQueryParams && params) {\n      const queryParams = {};\n      const keys = Object.keys(params);\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        if (!regexp.keys[key]) {\n          queryParams[key] = params[key];\n        }\n      }\n      const query = options.stringifyQueryParams(queryParams);\n      if (query) {\n        url += query.charAt(0) === '?' ? query : `?${query}`;\n      }\n    }\n\n    return url;\n  };\n}\n\n/**\n * @typedef NavigationTrigger\n * @type {object}\n * @property {function()} activate\n * @property {function()} inactivate\n */\n\n/** @type {Array<NavigationTrigger>} */\nlet triggers = [];\n\nfunction setNavigationTriggers(newTriggers) {\n  triggers.forEach(trigger => trigger.inactivate());\n\n  newTriggers.forEach(trigger => trigger.activate());\n\n  triggers = newTriggers;\n}\n\nconst willAnimate = elem => {\n  const name = getComputedStyle(elem).getPropertyValue('animation-name');\n  return name && name !== 'none';\n};\n\nconst waitForAnimation = (elem, cb) => {\n  const listener = () => {\n    elem.removeEventListener('animationend', listener);\n    cb();\n  };\n  elem.addEventListener('animationend', listener);\n};\n\nfunction animate(elem, className) {\n  elem.classList.add(className);\n\n  return new Promise(resolve => {\n    if (willAnimate(elem)) {\n      const rect = elem.getBoundingClientRect();\n      const size = `height: ${rect.bottom - rect.top}px; width: ${rect.right - rect.left}px`;\n      elem.setAttribute('style', `position: absolute; ${size}`);\n      waitForAnimation(elem, () => {\n        elem.classList.remove(className);\n        elem.removeAttribute('style');\n        resolve();\n      });\n    } else {\n      elem.classList.remove(className);\n      resolve();\n    }\n  });\n}\n\nconst MAX_REDIRECT_COUNT = 256;\n\nfunction isResultNotEmpty(result) {\n  return result !== null && result !== undefined;\n}\n\nfunction copyContextWithoutNext(context) {\n  const copy = Object.assign({}, context);\n  delete copy.next;\n  return copy;\n}\n\nfunction createLocation({pathname = '', chain = [], params = {}, redirectFrom, resolver}, route) {\n  const routes = chain.map(item => item.route);\n  return {\n    baseUrl: resolver && resolver.baseUrl || '',\n    pathname,\n    routes,\n    route: route || routes.length && routes[routes.length - 1] || null,\n    params,\n    redirectFrom,\n    getUrl: (userParams = {}) => getPathnameForRouter(\n      Router.pathToRegexp.compile(\n        getMatchedPath(routes)\n      )(Object.assign({}, params, userParams)),\n      resolver\n    )\n  };\n}\n\nfunction createRedirect(context, pathname) {\n  const params = Object.assign({}, context.params);\n  return {\n    redirect: {\n      pathname,\n      from: context.pathname,\n      params\n    }\n  };\n}\n\nfunction renderComponent(context, component) {\n  const element = document.createElement(component);\n  element.location = createLocation(context);\n  const index = context.chain.map(item => item.route).indexOf(context.route);\n  context.chain[index].element = element;\n  return element;\n}\n\nfunction runCallbackIfPossible(callback, args, thisArg) {\n  if (isFunction(callback)) {\n    return callback.apply(thisArg, args);\n  }\n}\n\nfunction amend(amendmentFunction, args, element) {\n  return amendmentResult => {\n    if (amendmentResult && (amendmentResult.cancel || amendmentResult.redirect)) {\n      return amendmentResult;\n    }\n\n    if (element) {\n      return runCallbackIfPossible(element[amendmentFunction], args, element);\n    }\n  };\n}\n\nfunction processNewChildren(newChildren, route) {\n  if (!Array.isArray(newChildren) && !isObject(newChildren)) {\n    throw new Error(\n      log(\n        `Incorrect \"children\" value for the route ${route.path}: expected array or object, but got ${newChildren}`\n      )\n    );\n  }\n\n  route.__children = [];\n  const childRoutes = toArray(newChildren);\n  for (let i = 0; i < childRoutes.length; i++) {\n    ensureRoute(childRoutes[i]);\n    route.__children.push(childRoutes[i]);\n  }\n}\n\nfunction removeDomNodes(nodes) {\n  if (nodes && nodes.length) {\n    const parent = nodes[0].parentNode;\n    for (let i = 0; i < nodes.length; i++) {\n      parent.removeChild(nodes[i]);\n    }\n  }\n}\n\nfunction getPathnameForRouter(pathname, router) {\n  const base = router.__effectiveBaseUrl;\n  return base\n    ? router.constructor.__createUrl(pathname.replace(/^\\//, ''), base).pathname\n    : pathname;\n}\n\nfunction getMatchedPath(chain) {\n  return chain.map(item => item.path).reduce((a, b) => {\n    if (b.length) {\n      return a.replace(/\\/$/, '') + '/' + b.replace(/^\\//, '');\n    }\n    return a;\n  }, '');\n}\n\n/**\n * A simple client-side router for single-page applications. It uses\n * express-style middleware and has a first-class support for Web Components and\n * lazy-loading. Works great in Polymer and non-Polymer apps.\n *\n * Use `new Router(outlet, options)` to create a new Router instance.\n *\n * * The `outlet` parameter is a reference to the DOM node to render\n *   the content into.\n *\n * * The `options` parameter is an optional object with options. The following\n *   keys are supported:\n *   * `baseUrl` — the initial value for [\n *     the `baseUrl` property\n *   ](#/classes/Vaadin.Router#property-baseUrl)\n *\n * The Router instance is automatically subscribed to navigation events\n * on `window`.\n *\n * See [Live Examples](#/classes/Vaadin.Router/demos/demo/index.html) for the detailed usage demo and code snippets.\n *\n * See also detailed API docs for the following methods, for the advanced usage:\n *\n * * [setOutlet](#/classes/Vaadin.Router#method-setOutlet) – should be used to configure the outlet.\n * * [setTriggers](#/classes/Vaadin.Router#method-setTriggers) – should be used to configure the navigation events.\n * * [setRoutes](#/classes/Vaadin.Router#method-setRoutes) – should be used to configure the routes.\n *\n * Only `setRoutes` has to be called manually, others are automatically invoked when creating a new instance.\n *\n * @memberof Vaadin\n * @extends Vaadin.Resolver\n * @demo demo/index.html\n * @summary JavaScript class that renders different DOM content depending on\n *    a given path. It can re-render when triggered or automatically on\n *    'popstate' and / or 'click' events.\n */\nclass Router extends Resolver {\n\n  /**\n   * Creates a new Router instance with a given outlet, and\n   * automatically subscribes it to navigation events on the `window`.\n   * Using a constructor argument or a setter for outlet is equivalent:\n   *\n   * ```\n   * const router = new Vaadin.Router();\n   * router.setOutlet(outlet);\n   * ```\n   * @param {?Node} outlet\n   * @param {?RouterOptions} options\n   */\n  constructor(outlet, options) {\n    const baseElement = document.head.querySelector('base');\n    super([], Object.assign({\n      // Default options\n      baseUrl: baseElement && baseElement.getAttribute('href')\n    }, options));\n\n    this.resolveRoute = context => this.__resolveRoute(context);\n\n    const triggers = Router.NavigationTrigger;\n    Router.setTriggers.apply(Router, Object.keys(triggers).map(key => triggers[key]));\n\n    /**\n     * The base URL for all routes in the router instance. By default,\n     * takes the `<base href>` attribute value if the base element exists\n     * in the `<head>`.\n     *\n     * @public\n     * @type {string}\n     */\n    this.baseUrl;\n\n    /**\n     * A promise that is settled after the current render cycle completes. If\n     * there is no render cycle in progress the promise is immediately settled\n     * with the last render cycle result.\n     *\n     * @public\n     * @type {!Promise<!Vaadin.Router.Location>}\n     */\n    this.ready;\n    this.ready = Promise.resolve(outlet);\n\n    /**\n     * Contains read-only information about the current router location:\n     * pathname, active routes, parameters. See the\n     * [Location type declaration](#/classes/Vaadin.Router.Location)\n     * for more details.\n     *\n     * @public\n     * @type {!Vaadin.Router.Location}\n     */\n    this.location;\n    this.location = createLocation({resolver: this});\n\n    this.__lastStartedRenderId = 0;\n    this.__navigationEventHandler = this.__onNavigationEvent.bind(this);\n    this.setOutlet(outlet);\n    this.subscribe();\n  }\n\n  __resolveRoute(context) {\n    const route = context.route;\n\n    let callbacks = Promise.resolve();\n\n    if (isFunction(route.children)) {\n      callbacks = callbacks\n        .then(() => route.children(copyContextWithoutNext(context)))\n        .then(children => {\n          // The route.children() callback might have re-written the\n          // route.children property instead of returning a value\n          if (!isResultNotEmpty(children) && !isFunction(route.children)) {\n            children = route.children;\n          }\n          processNewChildren(children, route);\n        });\n    }\n\n    const commands = {\n      redirect: path => createRedirect(context, path),\n      component: component => renderComponent(context, component)\n    };\n\n    return callbacks\n      .then(() => runCallbackIfPossible(route.action, [context, commands], route))\n      .then(result => {\n        if (isResultNotEmpty(result)) {\n          // Actions like `() => import('my-view.js')` are not expected to\n          // end the resolution, despite the result is not empty. Checking\n          // the result with a whitelist of values that end the resulution.\n          if (result instanceof HTMLElement ||\n              result.redirect ||\n              result === notFoundResult) {\n            return result;\n          }\n        }\n\n        if (isString(route.redirect)) {\n          return commands.redirect(route.redirect);\n        }\n\n        if (route.bundle) {\n          return loadBundle(route.bundle)\n            .then(() => {}, () => {\n              throw new Error(log(`Bundle not found: ${route.bundle}. Check if the file name is correct`));\n            });\n        }\n      })\n      .then(result => {\n        if (isResultNotEmpty(result)) {\n          return result;\n        }\n        if (isString(route.component)) {\n          return commands.component(route.component);\n        }\n      });\n  }\n\n  /**\n   * Sets the router outlet (the DOM node where the content for the current\n   * route is inserted). Any content pre-existing in the router outlet is\n   * removed at the end of each render pass.\n   *\n   * NOTE: this method is automatically invoked first time when creating a new Router instance.\n   *\n   * @param {?Node} outlet the DOM node where the content for the current route\n   *     is inserted.\n   */\n  setOutlet(outlet) {\n    if (outlet) {\n      this.__ensureOutlet(outlet);\n    }\n    this.__outlet = outlet;\n  }\n\n  /**\n   * Returns the current router outlet. The initial value is `undefined`.\n   *\n   * @return {?Node} the current router outlet (or `undefined`)\n   */\n  getOutlet() {\n    return this.__outlet;\n  }\n\n  /**\n   * Sets the routing config (replacing the existing one) and triggers a\n   * navigation event so that the router outlet is refreshed according to the\n   * current `window.location` and the new routing config.\n   *\n   * Each route object may have the following properties, listed here in the processing order:\n   * * `path` – the route path (relative to the parent route if any) in the\n   * [express.js syntax](https://expressjs.com/en/guide/routing.html#route-paths\").\n   *\n   * * `children` – an array of nested routes or a function that provides this\n   * array at the render time. The function can be synchronous or asynchronous:\n   * in the latter case the render is delayed until the returned promise is\n   * resolved. The `children` function is executed every time when this route is\n   * being rendered. This allows for dynamic route structures (e.g. backend-defined),\n   * but it might have a performance impact as well. In order to avoid calling\n   * the function on subsequent renders, you can override the `children` property\n   * of the route object and save the calculated array there\n   * (via `context.route.children = [ route1, route2, ...];`).\n   * Parent routes are fully resolved before resolving the children. Children\n   * 'path' values are relative to the parent ones.\n   *\n   * * `action` – the action that is executed before the route is resolved.\n   * The value for this property should be a function, accepting `context`\n   * and `commands` parameters described below. If present, this function is\n   * always invoked first, disregarding of the other properties' presence.\n   * The action can return a result directly or within a `Promise`, which\n   * resolves to the result. If the action result is an `HTMLElement` instance,\n   * a `commands.component(name)` result, a `commands.redirect(path)` result,\n   * or a `context.next()` result, the current route resolution is finished,\n   * and other route config properties are ignored.\n   * See also **Route Actions** section in [Live Examples](#/classes/Vaadin.Router/demos/demo/index.html).\n   *\n   * * `redirect` – other route's path to redirect to. Passes all route parameters to the redirect target.\n   * The target route should also be defined.\n   * See also **Redirects** section in [Live Examples](#/classes/Vaadin.Router/demos/demo/index.html).\n   *\n   * * `bundle` – string containing the path to `.js` or `.mjs` bundle to load before resolving the route,\n   * or the object with \"module\" and \"nomodule\" keys referring to different bundles.\n   * Each bundle is only loaded once. If \"module\" and \"nomodule\" are set, only one bundle is loaded,\n   * depending on whether the browser supports ES modules or not.\n   * The property is ignored when either an `action` returns the result or `redirect` property is present.\n   * Any error, e.g. 404 while loading bundle will cause route resolution to throw.\n   * See also **Code Splitting** section in [Live Examples](#/classes/Vaadin.Router/demos/demo/index.html).\n   *\n   * * `component` – the tag name of the Web Component to resolve the route to.\n   * The property is ignored when either an `action` returns the result or `redirect` property is present.\n   * If route contains the `component` property (or an action that return a component)\n   * and its child route also contains the `component` property, child route's component\n   * will be rendered as a light dom child of a parent component.\n   *\n   * * `name` – the string name of the route to use in the\n   * [`router.urlForName(name, params)`](#/classes/Vaadin.Router#method-urlForName)\n   * navigation helper method.\n   *\n   * For any route function (`action`, `children`) defined, the corresponding `route` object is available inside the callback\n   * through the `this` reference. If you need to access it, make sure you define the callback as a non-arrow function\n   * because arrow functions do not have their own `this` reference.\n   *\n   * `context` object that is passed to `action` function holds the following properties:\n   * * `context.pathname` – string with the pathname being resolved\n   *\n   * * `context.params` – object with route parameters\n   *\n   * * `context.route` – object that holds the route that is currently being rendered.\n   *\n   * * `context.next()` – function for asynchronously getting the next route\n   * contents from the resolution chain (if any)\n   *\n   * `commands` object that is passed to `action` function has\n   * the following methods:\n   *\n   * * `commands.redirect(path)` – function that creates a redirect data\n   * for the path specified.\n   *\n   * * `commands.component(component)` – function that creates a new HTMLElement\n   * with current context\n   *\n   * @param {!Array<!Object>|!Object} routes a single route or an array of those\n   */\n  setRoutes(routes) {\n    this.__urlForName = undefined;\n    super.setRoutes(routes);\n    this.__onNavigationEvent();\n  }\n\n  /**\n   * Asynchronously resolves the given pathname and renders the resolved route\n   * component into the router outlet. If no router outlet is set at the time of\n   * calling this method, or at the time when the route resolution is completed,\n   * a `TypeError` is thrown.\n   *\n   * Returns a promise that is fulfilled with the router outlet DOM Node after\n   * the route component is created and inserted into the router outlet, or\n   * rejected if no route matches the given path.\n   *\n   * If another render pass is started before the previous one is completed, the\n   * result of the previous render pass is ignored.\n   *\n   * @param {!string|!{pathname: !string}} pathnameOrContext the pathname to\n   *    render or a context object with a `pathname` property and other\n   *    properties to pass to the resolver.\n   * @return {!Promise<!Node>}\n   */\n  render(pathnameOrContext, shouldUpdateHistory) {\n    const renderId = ++this.__lastStartedRenderId;\n    const pathname = pathnameOrContext.pathname || pathnameOrContext;\n\n    // Find the first route that resolves to a non-empty result\n    this.ready = this.resolve(pathnameOrContext)\n\n      // Process the result of this.resolve() and handle all special commands:\n      // (redirect / prevent / component). If the result is a 'component',\n      // then go deeper and build the entire chain of nested components matching\n      // the pathname. Also call all 'on before' callbacks along the way.\n      .then(context => this.__fullyResolveChain(context))\n\n      .then(context => {\n        if (renderId === this.__lastStartedRenderId) {\n          const previousContext = this.__previousContext;\n\n          // Check if the render was prevented and make an early return in that case\n          if (context === previousContext) {\n            return this.location;\n          }\n\n          this.location = createLocation(context);\n          fireRouterEvent('location-changed', {router: this, location: this.location});\n\n          if (shouldUpdateHistory) {\n            this.__updateBrowserHistory(context.pathname, context.redirectFrom);\n          }\n\n          this.__addAppearingContent(context, previousContext);\n          const animationDone = this.__animateIfNeeded(context);\n\n          this.__runOnAfterEnterCallbacks(context);\n          this.__runOnAfterLeaveCallbacks(context, previousContext);\n\n          return animationDone.then(() => {\n            if (renderId === this.__lastStartedRenderId) {\n              // If there is another render pass started after this one,\n              // the 'disappearing content' would be removed when the other\n              // render pass calls `this.__addAppearingContent()`\n              this.__removeDisappearingContent();\n\n              this.__previousContext = context;\n              return this.location;\n            }\n          });\n        }\n      })\n      .catch(error => {\n        if (renderId === this.__lastStartedRenderId) {\n          if (shouldUpdateHistory) {\n            this.__updateBrowserHistory(pathname);\n          }\n          removeDomNodes(this.__outlet && this.__outlet.children);\n          this.location = createLocation({pathname, resolver: this});\n          fireRouterEvent('error', {router: this, error, pathname});\n          throw error;\n        }\n      });\n    return this.ready;\n  }\n\n  __fullyResolveChain(originalContext, currentContext = originalContext) {\n    return this.__amendWithResolutionResult(currentContext)\n      .then(amendedContext => {\n        const initialContext = amendedContext !== currentContext ? amendedContext : originalContext;\n        return amendedContext.next()\n          .then(nextContext => {\n            if (nextContext === null || nextContext === notFoundResult) {\n              const matchedPath = getPathnameForRouter(\n                getMatchedPath(amendedContext.chain),\n                amendedContext.resolver\n              );\n              if (matchedPath !== amendedContext.pathname) {\n                throw getNotFoundError(initialContext);\n              }\n            }\n            return nextContext && nextContext !== notFoundResult\n              ? this.__fullyResolveChain(initialContext, nextContext)\n              : this.__amendWithOnBeforeCallbacks(initialContext);\n          });\n      });\n  }\n\n  __amendWithResolutionResult(context) {\n    const result = context.result;\n    if (result instanceof HTMLElement) {\n      return Promise.resolve(context);\n    } else if (result.redirect) {\n      return this.__redirect(result.redirect, context.__redirectCount)\n        .then(context => this.__amendWithResolutionResult(context));\n    } else if (result instanceof Error) {\n      return Promise.reject(result);\n    } else {\n      return Promise.reject(\n        new Error(\n          log(\n            `Invalid route resolution result for path \"${context.pathname}\". ` +\n            `Expected redirect object or HTML element, but got: \"${logValue(result)}\". ` +\n            `Double check the action return value for the route.`\n          )\n        ));\n    }\n  }\n\n  __amendWithOnBeforeCallbacks(contextWithFullChain) {\n    return this.__runOnBeforeCallbacks(contextWithFullChain).then(amendedContext => {\n      if (amendedContext === this.__previousContext || amendedContext === contextWithFullChain) {\n        return amendedContext;\n      }\n      return this.__fullyResolveChain(amendedContext);\n    });\n  }\n\n  __runOnBeforeCallbacks(newContext) {\n    const previousContext = this.__previousContext || {};\n    const previousChain = previousContext.chain || [];\n    const newChain = newContext.chain;\n\n    let callbacks = Promise.resolve();\n    const prevent = () => ({cancel: true});\n    const redirect = (pathname) => createRedirect(newContext, pathname);\n\n    newContext.__divergedChainIndex = 0;\n    if (previousChain.length) {\n      for (let i = 0; i < Math.min(previousChain.length, newChain.length); i = ++newContext.__divergedChainIndex) {\n        if (previousChain[i].route !== newChain[i].route\n          || previousChain[i].path !== newChain[i].path\n          || (previousChain[i].element && previousChain[i].element.localName)\n            !== (newChain[i].element && newChain[i].element.localName)\n        ) {\n          break;\n        }\n      }\n\n      for (let i = previousChain.length - 1; i >= newContext.__divergedChainIndex; i--) {\n        const location = createLocation(newContext);\n        callbacks = callbacks\n          .then(amend('onBeforeLeave', [location, {prevent}, this], previousChain[i].element))\n          .then(result => {\n            if (!(result || {}).redirect) {\n              return result;\n            }\n          });\n      }\n    }\n\n    for (let i = newContext.__divergedChainIndex; i < newChain.length; i++) {\n      const location = createLocation(newContext, newChain[i].route);\n      callbacks = callbacks.then(amend('onBeforeEnter', [location, {prevent, redirect}, this], newChain[i].element));\n    }\n\n    return callbacks.then(amendmentResult => {\n      if (amendmentResult) {\n        if (amendmentResult.cancel) {\n          return this.__previousContext;\n        }\n        if (amendmentResult.redirect) {\n          return this.__redirect(amendmentResult.redirect, newContext.__redirectCount);\n        }\n      }\n      return newContext;\n    });\n  }\n\n  __redirect(redirectData, counter) {\n    if (counter > MAX_REDIRECT_COUNT) {\n      throw new Error(log(`Too many redirects when rendering ${redirectData.from}`));\n    }\n\n    return this.resolve({\n      pathname: this.urlForPath(\n        redirectData.pathname,\n        redirectData.params\n      ),\n      redirectFrom: redirectData.from,\n      __redirectCount: (counter || 0) + 1\n    });\n  }\n\n  __ensureOutlet(outlet = this.__outlet) {\n    if (!(outlet instanceof Node)) {\n      throw new TypeError(log(`Expected router outlet to be a valid DOM Node (but got ${outlet})`));\n    }\n  }\n\n  __updateBrowserHistory(pathname, replace) {\n    if (window.location.pathname !== pathname) {\n      const changeState = replace ? 'replaceState' : 'pushState';\n      window.history[changeState](null, document.title, pathname);\n      window.dispatchEvent(new PopStateEvent('popstate', {state: 'vaadin-router-ignore'}));\n    }\n  }\n\n  __addAppearingContent(context, previousContext) {\n    this.__ensureOutlet();\n\n    // If the previous 'entering' animation has not completed yet,\n    // stop it and remove that content from the DOM before adding new one.\n    this.__removeAppearingContent();\n\n    // Find the deepest common parent between the last and the new component\n    // chains. Update references for the unchanged elements in the new chain\n    let deepestCommonParent = this.__outlet;\n    for (let i = 0; i < context.__divergedChainIndex; i++) {\n      const unchangedElement = previousContext && previousContext.chain[i].element;\n      if (unchangedElement) {\n        if (unchangedElement.parentNode === deepestCommonParent) {\n          context.chain[i].element = unchangedElement;\n          deepestCommonParent = unchangedElement;\n        } else {\n          break;\n        }\n      }\n    }\n\n    // Keep two lists of DOM elements:\n    //  - those that should be removed once the transition animation is over\n    //  - and those that should remain\n    this.__disappearingContent = Array.from(deepestCommonParent.children);\n    this.__appearingContent = [];\n\n    // Add new elements (starting after the deepest common parent) to the DOM.\n    // That way only the components that are actually different between the two\n    // locations are added to the DOM (and those that are common remain in the\n    // DOM without first removing and then adding them again).\n    let parentElement = deepestCommonParent;\n    for (let i = context.__divergedChainIndex; i < context.chain.length; i++) {\n      const elementToAdd = context.chain[i].element;\n      if (elementToAdd) {\n        parentElement.appendChild(elementToAdd);\n        if (parentElement === deepestCommonParent) {\n          this.__appearingContent.push(elementToAdd);\n        }\n        parentElement = elementToAdd;\n      }\n    }\n  }\n\n  __removeDisappearingContent() {\n    if (this.__disappearingContent) {\n      removeDomNodes(this.__disappearingContent);\n    }\n    this.__disappearingContent = null;\n    this.__appearingContent = null;\n  }\n\n  __removeAppearingContent() {\n    if (this.__disappearingContent && this.__appearingContent) {\n      removeDomNodes(this.__appearingContent);\n      this.__disappearingContent = null;\n      this.__appearingContent = null;\n    }\n  }\n\n  __runOnAfterLeaveCallbacks(currentContext, targetContext) {\n    if (!targetContext) {\n      return;\n    }\n\n    // REVERSE iteration: from Z to A\n    for (let i = targetContext.chain.length - 1; i >= currentContext.__divergedChainIndex; i--) {\n      const currentComponent = targetContext.chain[i].element;\n      if (!currentComponent) {\n        continue;\n      }\n      try {\n        const location = createLocation(currentContext);\n        runCallbackIfPossible(\n          currentComponent.onAfterLeave,\n          [location, {}, targetContext.resolver],\n          currentComponent);\n      } finally {\n        removeDomNodes(currentComponent.children);\n      }\n    }\n  }\n\n  __runOnAfterEnterCallbacks(currentContext) {\n    // forward iteration: from A to Z\n    for (let i = currentContext.__divergedChainIndex; i < currentContext.chain.length; i++) {\n      const currentComponent = currentContext.chain[i].element || {};\n      const location = createLocation(currentContext, currentContext.chain[i].route);\n      runCallbackIfPossible(\n        currentComponent.onAfterEnter,\n        [location, {}, currentContext.resolver],\n        currentComponent);\n    }\n  }\n\n  __animateIfNeeded(context) {\n    const from = (this.__disappearingContent || [])[0];\n    const to = (this.__appearingContent || [])[0];\n    const promises = [];\n\n    const chain = context.chain;\n    let config;\n    for (let i = chain.length; i > 0; i--) {\n      if (chain[i - 1].route.animate) {\n        config = chain[i - 1].route.animate;\n        break;\n      }\n    }\n\n    if (from && to && config) {\n      const leave = isObject(config) && config.leave || 'leaving';\n      const enter = isObject(config) && config.enter || 'entering';\n      promises.push(animate(from, leave));\n      promises.push(animate(to, enter));\n    }\n\n    return Promise.all(promises).then(() => context);\n  }\n\n  /**\n   * Subscribes this instance to navigation events on the `window`.\n   *\n   * NOTE: beware of resource leaks. For as long as a router instance is\n   * subscribed to navigation events, it won't be garbage collected.\n   */\n  subscribe() {\n    window.addEventListener('vaadin-router-go', this.__navigationEventHandler);\n  }\n\n  /**\n   * Removes the subscription to navigation events created in the `subscribe()`\n   * method.\n   */\n  unsubscribe() {\n    window.removeEventListener('vaadin-router-go', this.__navigationEventHandler);\n  }\n\n  __onNavigationEvent(event) {\n    const pathname = event ? event.detail.pathname : window.location.pathname;\n    if (isString(this.__normalizePathname(pathname))) {\n      if (event && event.preventDefault) {\n        event.preventDefault();\n      }\n      this.render(pathname, true);\n    }\n  }\n\n  /**\n   * Configures what triggers Vaadin.Router navigation events:\n   *  - `POPSTATE`: popstate events on the current `window`\n   *  - `CLICK`: click events on `<a>` links leading to the current page\n   *\n   * This method is invoked with the pre-configured values when creating a new Router instance.\n   * By default, both `POPSTATE` and `CLICK` are enabled. This setup is expected to cover most of the use cases.\n   *\n   * See the `router-config.js` for the default navigation triggers config. Based on it, you can\n   * create the own one and only import the triggers you need, instead of pulling in all the code,\n   * e.g. if you want to handle `click` differently.\n   *\n   * See also **Navigation Triggers** section in [Live Examples](#/classes/Vaadin.Router/demos/demo/index.html).\n   *\n   * @param {...NavigationTrigger} triggers\n   */\n  static setTriggers(...triggers) {\n    setNavigationTriggers(triggers);\n  }\n\n  /**\n   * Generates a URL for the route with the given name, optionally performing\n   * substitution of parameters.\n   *\n   * The route is searched in all the Vaadin.Router instances subscribed to\n   * navigation events.\n   *\n   * **Note:** For child route names, only array children are considered.\n   * It is not possible to generate URLs using a name for routes set with\n   * a children function.\n   *\n   * @function urlForName\n   * @param {!string} name the route name or the route’s `component` name.\n   * @param {?Object} params Optional object with route path parameters.\n   * Named parameters are passed by name (`params[name] = value`), unnamed\n   * parameters are passed by index (`params[index] = value`).\n   *\n   * @return {string}\n   */\n  urlForName(name, params) {\n    if (!this.__urlForName) {\n      this.__urlForName = generateUrls(this);\n    }\n    return getPathnameForRouter(\n      this.__urlForName(name, params),\n      this\n    );\n  }\n\n  /**\n   * Generates a URL for the given route path, optionally performing\n   * substitution of parameters.\n   *\n   * @param {!string} path string route path declared in [express.js syntax](https://expressjs.com/en/guide/routing.html#route-paths\").\n   * @param {?Object} params Optional object with route path parameters.\n   * Named parameters are passed by name (`params[name] = value`), unnamed\n   * parameters are passed by index (`params[index] = value`).\n   *\n   * @return {string}\n   */\n  urlForPath(path, params) {\n    return getPathnameForRouter(\n      Router.pathToRegexp.compile(path)(params),\n      this\n    );\n  }\n\n  /**\n   * Triggers navigation to a new path. Returns a boolean without waiting until\n   * the navigation is complete. Returns `true` if at least one `Vaadin.Router`\n   * has handled the navigation (was subscribed and had `baseUrl` matching\n   * the `pathname` argument), otherwise returns `false`.\n   *\n   * @param {!string} pathname a new in-app path\n   * @return {boolean}\n   */\n  static go(pathname) {\n    return fireRouterEvent('go', {pathname});\n  }\n}\n\nconst DEV_MODE_CODE_REGEXP =\n  /\\/\\*\\*\\s+vaadin-dev-mode:start([\\s\\S]*)vaadin-dev-mode:end\\s+\\*\\*\\//i;\n\nfunction isMinified() {\n  function test() {\n    /** vaadin-dev-mode:start\n    return false;\n    vaadin-dev-mode:end **/\n    return true;\n  }\n  return uncommentAndRun(test);\n}\n\nfunction isDevelopmentMode() {\n  try {\n    return isForcedDevelopmentMode() || (isLocalhost() && !isMinified() && !isFlowProductionMode());\n  } catch (e) {\n    // Some error in this code, assume production so no further actions will be taken\n    return false;\n  }\n}\n\nfunction isForcedDevelopmentMode() {\n  return localStorage.getItem(\"vaadin.developmentmode.force\");\n}\n\nfunction isLocalhost() {\n  return ([\"localhost\",\"127.0.0.1\"].indexOf(window.location.hostname) >= 0);\n}\n\nfunction isFlowProductionMode() {\n  if (window.Vaadin && window.Vaadin.Flow && window.Vaadin.Flow.clients) {\n    const productionModeApps = Object.keys(window.Vaadin.Flow.clients)\n    .map(key => window.Vaadin.Flow.clients[key])\n    .filter(client => client.productionMode);\n    if (productionModeApps.length > 0) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction uncommentAndRun(callback, args) {\n  if (typeof callback !== 'function') {\n    return;\n  }\n\n  const match = DEV_MODE_CODE_REGEXP.exec(callback.toString());\n  if (match) {\n    try {\n      // requires CSP: script-src 'unsafe-eval'\n      callback = new Function(match[1]);\n    } catch (e) {\n      // eat the exception\n      console.log('vaadin-development-mode-detector: uncommentAndRun() failed', e);\n    }\n  }\n\n  return callback(args);\n}\n\n// A guard against polymer-modulizer removing the window.Vaadin\n// initialization above.\nwindow['Vaadin'] = window['Vaadin'] || {};\n\n/**\n * Inspects the source code of the given `callback` function for\n * specially-marked _commented_ code. If such commented code is found in the\n * callback source, uncomments and runs that code instead of the callback\n * itself. Otherwise runs the callback as is.\n *\n * The optional arguments are passed into the callback / uncommented code,\n * the result is returned.\n *\n * See the `isMinified()` function source code in this file for an example.\n *\n */\nconst runIfDevelopmentMode = function(callback, args) {\n  if (window.Vaadin.developmentMode) {\n    return uncommentAndRun(callback, args);\n  }\n};\n\nif (window.Vaadin.developmentMode === undefined) {\n  window.Vaadin.developmentMode = isDevelopmentMode();\n}\n\n/* This file is autogenerated from src/vaadin-usage-statistics.tpl.html */\n\nfunction maybeGatherAndSendStats() {\n  /** vaadin-dev-mode:start\n  (function () {\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar getPolymerVersion = function getPolymerVersion() {\n  return window.Polymer && window.Polymer.version;\n};\n\nvar StatisticsGatherer = function () {\n  function StatisticsGatherer(logger) {\n    classCallCheck(this, StatisticsGatherer);\n\n    this.now = new Date().getTime();\n    this.logger = logger;\n  }\n\n  createClass(StatisticsGatherer, [{\n    key: 'frameworkVersionDetectors',\n    value: function frameworkVersionDetectors() {\n      return {\n        'Flow': function Flow() {\n          if (window.Vaadin && window.Vaadin.Flow && window.Vaadin.Flow.clients) {\n            var flowVersions = Object.keys(window.Vaadin.Flow.clients).map(function (key) {\n              return window.Vaadin.Flow.clients[key];\n            }).filter(function (client) {\n              return client.getVersionInfo;\n            }).map(function (client) {\n              return client.getVersionInfo().flow;\n            });\n            if (flowVersions.length > 0) {\n              return flowVersions[0];\n            }\n          }\n        },\n        'Vaadin Framework': function VaadinFramework() {\n          if (window.vaadin && window.vaadin.clients) {\n            var frameworkVersions = Object.values(window.vaadin.clients).filter(function (client) {\n              return client.getVersionInfo;\n            }).map(function (client) {\n              return client.getVersionInfo().vaadinVersion;\n            });\n            if (frameworkVersions.length > 0) {\n              return frameworkVersions[0];\n            }\n          }\n        },\n        'AngularJs': function AngularJs() {\n          if (window.angular && window.angular.version && window.angular.version) {\n            return window.angular.version.full;\n          }\n        },\n        'Angular': function Angular() {\n          if (window.ng) {\n            var tags = document.querySelectorAll(\"[ng-version]\");\n            if (tags.length > 0) {\n              return tags[0].getAttribute(\"ng-version\");\n            }\n            return \"Unknown\";\n          }\n        },\n        'Backbone.js': function BackboneJs() {\n          if (window.Backbone) {\n            return window.Backbone.VERSION;\n          }\n        },\n        'React': function React() {\n          var reactSelector = '[data-reactroot], [data-reactid]';\n          if (!!document.querySelector(reactSelector)) {\n            // React does not publish the version by default\n            return \"unknown\";\n          }\n        },\n        'Ember': function Ember() {\n          if (window.Em && window.Em.VERSION) {\n            return window.Em.VERSION;\n          } else if (window.Ember && window.Ember.VERSION) {\n            return window.Ember.VERSION;\n          }\n        },\n        'jQuery': function (_jQuery) {\n          function jQuery() {\n            return _jQuery.apply(this, arguments);\n          }\n\n          jQuery.toString = function () {\n            return _jQuery.toString();\n          };\n\n          return jQuery;\n        }(function () {\n          if (typeof jQuery === 'function' && jQuery.prototype.jquery !== undefined) {\n            return jQuery.prototype.jquery;\n          }\n        }),\n        'Polymer': function Polymer() {\n          var version = getPolymerVersion();\n          if (version) {\n            return version;\n          }\n        },\n        'Vue.js': function VueJs() {\n          if (window.Vue) {\n            return window.Vue.version;\n          }\n        }\n      };\n    }\n  }, {\n    key: 'getUsedVaadinElements',\n    value: function getUsedVaadinElements(elements) {\n      var version = getPolymerVersion();\n      var elementClasses = void 0;\n      if (version && version.indexOf('2') === 0) {\n        // Polymer 2: components classes are stored in window.Vaadin\n        elementClasses = Object.keys(window.Vaadin).map(function (c) {\n          return window.Vaadin[c];\n        }).filter(function (c) {\n          return c.is;\n        });\n      } else {\n        // Polymer 3: components classes are stored in window.Vaadin.registrations\n        elementClasses = window.Vaadin.registrations || [];\n      }\n      elementClasses.forEach(function (klass) {\n        var version = klass.version ? klass.version : \"0.0.0\";\n        elements[klass.is] = { version: version };\n      });\n    }\n  }, {\n    key: 'getUsedVaadinThemes',\n    value: function getUsedVaadinThemes(themes) {\n      ['Lumo', 'Material'].forEach(function (themeName) {\n        var theme;\n        var version = getPolymerVersion();\n        if (version && version.indexOf('2') === 0) {\n          // Polymer 2: themes are stored in window.Vaadin\n          theme = window.Vaadin[themeName];\n        } else {\n          // Polymer 3: themes are stored in custom element registry\n          theme = customElements.get('vaadin-' + themeName.toLowerCase() + '-styles');\n        }\n        if (theme && theme.version) {\n          themes[themeName] = { version: theme.version };\n        }\n      });\n    }\n  }, {\n    key: 'getFrameworks',\n    value: function getFrameworks(frameworks) {\n      var detectors = this.frameworkVersionDetectors();\n      Object.keys(detectors).forEach(function (framework) {\n        var detector = detectors[framework];\n        try {\n          var version = detector();\n          if (version) {\n            frameworks[framework] = { \"version\": version };\n          }\n        } catch (e) {}\n      });\n    }\n  }, {\n    key: 'gather',\n    value: function gather(storage) {\n      var storedStats = storage.read();\n      var gatheredStats = {};\n      var types = [\"elements\", \"frameworks\", \"themes\"];\n\n      types.forEach(function (type) {\n        gatheredStats[type] = {};\n        if (!storedStats[type]) {\n          storedStats[type] = {};\n        }\n      });\n\n      var previousStats = JSON.stringify(storedStats);\n\n      this.getUsedVaadinElements(gatheredStats.elements);\n      this.getFrameworks(gatheredStats.frameworks);\n      this.getUsedVaadinThemes(gatheredStats.themes);\n\n      var now = this.now;\n      types.forEach(function (type) {\n        var keys = Object.keys(gatheredStats[type]);\n        keys.forEach(function (key) {\n          if (!storedStats[type][key] || _typeof(storedStats[type][key]) != _typeof({})) {\n            storedStats[type][key] = { \"firstUsed\": now };\n          }\n          // Discards any previously logged version numebr\n          storedStats[type][key].version = gatheredStats[type][key].version;\n          storedStats[type][key].lastUsed = now;\n        });\n      });\n\n      var newStats = JSON.stringify(storedStats);\n      storage.write(newStats);\n      if (newStats != previousStats && Object.keys(storedStats).length > 0) {\n        this.logger.debug(\"New stats: \" + newStats);\n      }\n    }\n  }]);\n  return StatisticsGatherer;\n}();\n\nvar StatisticsStorage = function () {\n  function StatisticsStorage(key) {\n    classCallCheck(this, StatisticsStorage);\n\n    this.key = key;\n  }\n\n  createClass(StatisticsStorage, [{\n    key: 'read',\n    value: function read() {\n      var localStorageStatsString = localStorage.getItem(this.key);\n      try {\n        return JSON.parse(localStorageStatsString ? localStorageStatsString : '{}');\n      } catch (e) {\n        return {};\n      }\n    }\n  }, {\n    key: 'write',\n    value: function write(data) {\n      localStorage.setItem(this.key, data);\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      localStorage.removeItem(this.key);\n    }\n  }, {\n    key: 'isEmpty',\n    value: function isEmpty() {\n      var storedStats = this.read();\n      var empty = true;\n      Object.keys(storedStats).forEach(function (key) {\n        if (Object.keys(storedStats[key]).length > 0) {\n          empty = false;\n        }\n      });\n\n      return empty;\n    }\n  }]);\n  return StatisticsStorage;\n}();\n\nvar StatisticsSender = function () {\n  function StatisticsSender(url, logger) {\n    classCallCheck(this, StatisticsSender);\n\n    this.url = url;\n    this.logger = logger;\n  }\n\n  createClass(StatisticsSender, [{\n    key: 'send',\n    value: function send(data, errorHandler) {\n      var logger = this.logger;\n\n      if (navigator.onLine === false) {\n        logger.debug(\"Offline, can't send\");\n        errorHandler();\n        return;\n      }\n      logger.debug(\"Sending data to \" + this.url);\n\n      var req = new XMLHttpRequest();\n      req.withCredentials = true;\n      req.addEventListener(\"load\", function () {\n        // Stats sent, nothing more to do\n        logger.debug(\"Response: \" + req.responseText);\n      });\n      req.addEventListener(\"error\", function () {\n        logger.debug(\"Send failed\");\n        errorHandler();\n      });\n      req.addEventListener(\"abort\", function () {\n        logger.debug(\"Send aborted\");\n        errorHandler();\n      });\n      req.open(\"POST\", this.url);\n      req.setRequestHeader(\"Content-Type\", \"application/json\");\n      req.send(data);\n    }\n  }]);\n  return StatisticsSender;\n}();\n\nvar StatisticsLogger = function () {\n  function StatisticsLogger(id) {\n    classCallCheck(this, StatisticsLogger);\n\n    this.id = id;\n  }\n\n  createClass(StatisticsLogger, [{\n    key: '_isDebug',\n    value: function _isDebug() {\n      return localStorage.getItem(\"vaadin.\" + this.id + \".debug\");\n    }\n  }, {\n    key: 'debug',\n    value: function debug(msg) {\n      if (this._isDebug()) {\n        console.info(this.id + \": \" + msg);\n      }\n    }\n  }]);\n  return StatisticsLogger;\n}();\n\nvar UsageStatistics = function () {\n  function UsageStatistics() {\n    classCallCheck(this, UsageStatistics);\n\n    this.now = new Date();\n    this.timeNow = this.now.getTime();\n    this.gatherDelay = 10; // Delay between loading this file and gathering stats\n    this.initialDelay = 24 * 60 * 60;\n\n    this.logger = new StatisticsLogger(\"statistics\");\n    this.storage = new StatisticsStorage(\"vaadin.statistics.basket\");\n    this.gatherer = new StatisticsGatherer(this.logger);\n    this.sender = new StatisticsSender(\"https://tools.vaadin.com/usage-stats/submit\", this.logger);\n  }\n\n  createClass(UsageStatistics, [{\n    key: 'maybeGatherAndSend',\n    value: function maybeGatherAndSend() {\n      var _this = this;\n\n      if (localStorage.getItem(UsageStatistics.optOutKey)) {\n        return;\n      }\n      this.gatherer.gather(this.storage);\n      setTimeout(function () {\n        _this.maybeSend();\n      }, this.gatherDelay * 1000);\n    }\n  }, {\n    key: 'lottery',\n    value: function lottery() {\n      return Math.random() <= 0.05;\n    }\n  }, {\n    key: 'currentMonth',\n    value: function currentMonth() {\n      return this.now.getYear() * 12 + this.now.getMonth();\n    }\n  }, {\n    key: 'maybeSend',\n    value: function maybeSend() {\n      var firstUse = Number(localStorage.getItem(UsageStatistics.firstUseKey));\n      var monthProcessed = Number(localStorage.getItem(UsageStatistics.monthProcessedKey));\n\n      if (!firstUse) {\n        // Use a grace period to avoid interfering with tests, incognito mode etc\n        firstUse = this.timeNow;\n        localStorage.setItem(UsageStatistics.firstUseKey, firstUse);\n      }\n\n      if (this.timeNow < firstUse + this.initialDelay * 1000) {\n        this.logger.debug(\"No statistics will be sent until the initial delay of \" + this.initialDelay + \"s has passed\");\n        return;\n      }\n      if (this.currentMonth() <= monthProcessed) {\n        this.logger.debug(\"This month has already been processed\");\n        return;\n      }\n      localStorage.setItem(UsageStatistics.monthProcessedKey, this.currentMonth());\n      // Use random sampling\n      if (this.lottery()) {\n        this.logger.debug(\"Congratulations, we have a winner!\");\n      } else {\n        this.logger.debug(\"Sorry, no stats from you this time\");\n        return;\n      }\n\n      this.send();\n    }\n  }, {\n    key: 'send',\n    value: function send() {\n      // Ensure we have the latest data\n      this.gatherer.gather(this.storage);\n\n      // Read, send and clean up\n      var data = this.storage.read();\n      data[\"firstUse\"] = Number(localStorage.getItem(UsageStatistics.firstUseKey));\n      data[\"usageStatisticsVersion\"] = UsageStatistics.version;\n      var info = 'This request contains usage statistics gathered from the application running in development mode. \\n\\nStatistics gathering is automatically disabled and excluded from production builds.\\n\\nFor details and to opt-out, see https://github.com/vaadin/vaadin-usage-statistics.\\n\\n\\n\\n';\n      var self = this;\n      this.sender.send(info + JSON.stringify(data), function () {\n        // Revert the 'month processed' flag\n        localStorage.setItem(UsageStatistics.monthProcessedKey, self.currentMonth() - 1);\n      });\n    }\n  }], [{\n    key: 'version',\n    get: function get$1() {\n      return '2.0.1';\n    }\n  }, {\n    key: 'firstUseKey',\n    get: function get$1() {\n      return 'vaadin.statistics.firstuse';\n    }\n  }, {\n    key: 'monthProcessedKey',\n    get: function get$1() {\n      return 'vaadin.statistics.monthProcessed';\n    }\n  }, {\n    key: 'optOutKey',\n    get: function get$1() {\n      return 'vaadin.statistics.optout';\n    }\n  }]);\n  return UsageStatistics;\n}();\n\ntry {\n  window.Vaadin = window.Vaadin || {};\n  window.Vaadin.usageStatistics = window.Vaadin.usageStatistics || new UsageStatistics();\n  window.Vaadin.usageStatistics.maybeGatherAndSend();\n} catch (e) {\n  // Intentionally ignored as this is not a problem in the app being developed\n}\n\n}());\n\n  vaadin-dev-mode:end **/\n}\n\nconst usageStatistics = function() {\n  if (typeof runIfDevelopmentMode === 'function') {\n    return runIfDevelopmentMode(maybeGatherAndSendStats);\n  }\n};\n\nwindow.Vaadin = window.Vaadin || {};\nwindow.Vaadin.registrations = window.Vaadin.registrations || [];\n\nwindow.Vaadin.registrations.push({\n  is: '@vaadin/router',\n  version: '1.2.0',\n});\n\nusageStatistics();\n\nRouter.NavigationTrigger = {POPSTATE, CLICK};\n\nexport { Router, Resolver };\n//# sourceMappingURL=vaadin-router.js.map\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive so that lit-html will call the function\n * during template rendering, rather than passing as a value.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object\n *\n * @example\n *\n * ```\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n * ```\n */\n// tslint:disable-next-line:no-any\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = window.customElements !== undefined &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `startNode` (inclusive) to `endNode`\n * (exclusive), into another container (could be the same container), before\n * `beforeNode`. If `beforeNode` is null, it appends the nodes to the\n * container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    let node = start;\n    while (node !== end) {\n        const n = node.nextSibling;\n        container.insertBefore(node, before);\n        node = n;\n    }\n};\n/**\n * Removes nodes, starting from `startNode` (inclusive) to `endNode`\n * (exclusive), from `container`.\n */\nexport const removeNodes = (container, startNode, endNode = null) => {\n    let node = startNode;\n    while (node !== endNode) {\n        const n = node.nextSibling;\n        container.removeChild(node);\n        node = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        let index = -1;\n        let partIndex = 0;\n        const nodesToRemove = [];\n        const _prepareTemplate = (template) => {\n            const content = template.content;\n            // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be\n            // null\n            const walker = document.createTreeWalker(content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n            // Keeps track of the last index associated with a part. We try to delete\n            // unnecessary nodes, but we never want to associate two different parts\n            // to the same index. They must have a constant node between.\n            let lastPartIndex = 0;\n            while (walker.nextNode()) {\n                index++;\n                const node = walker.currentNode;\n                if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                    if (node.hasAttributes()) {\n                        const attributes = node.attributes;\n                        // Per\n                        // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                        // attributes are not guaranteed to be returned in document order.\n                        // In particular, Edge/IE can return them out of order, so we cannot\n                        // assume a correspondance between part index and attribute index.\n                        let count = 0;\n                        for (let i = 0; i < attributes.length; i++) {\n                            if (attributes[i].value.indexOf(marker) >= 0) {\n                                count++;\n                            }\n                        }\n                        while (count-- > 0) {\n                            // Get the template literal section leading up to the first\n                            // expression in this attribute\n                            const stringForPart = result.strings[partIndex];\n                            // Find the attribute name\n                            const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                            // Find the corresponding attribute\n                            // All bound attributes have had a suffix added in\n                            // TemplateResult#getHTML to opt out of special attribute\n                            // handling. To look up the attribute value we also need to add\n                            // the suffix.\n                            const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                            const attributeValue = node.getAttribute(attributeLookupName);\n                            const strings = attributeValue.split(markerRegex);\n                            this.parts.push({ type: 'attribute', index, name, strings });\n                            node.removeAttribute(attributeLookupName);\n                            partIndex += strings.length - 1;\n                        }\n                    }\n                    if (node.tagName === 'TEMPLATE') {\n                        _prepareTemplate(node);\n                    }\n                }\n                else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                    const data = node.data;\n                    if (data.indexOf(marker) >= 0) {\n                        const parent = node.parentNode;\n                        const strings = data.split(markerRegex);\n                        const lastIndex = strings.length - 1;\n                        // Generate a new text node for each literal section\n                        // These nodes are also used as the markers for node parts\n                        for (let i = 0; i < lastIndex; i++) {\n                            parent.insertBefore((strings[i] === '') ? createMarker() :\n                                document.createTextNode(strings[i]), node);\n                            this.parts.push({ type: 'node', index: ++index });\n                        }\n                        // If there's no text, we must insert a comment to mark our place.\n                        // Else, we can trust it will stick around after cloning.\n                        if (strings[lastIndex] === '') {\n                            parent.insertBefore(createMarker(), node);\n                            nodesToRemove.push(node);\n                        }\n                        else {\n                            node.data = strings[lastIndex];\n                        }\n                        // We have a part for each match found\n                        partIndex += lastIndex;\n                    }\n                }\n                else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                    if (node.data === marker) {\n                        const parent = node.parentNode;\n                        // Add a new marker node to be the startNode of the Part if any of\n                        // the following are true:\n                        //  * We don't have a previousSibling\n                        //  * The previousSibling is already the start of a previous part\n                        if (node.previousSibling === null || index === lastPartIndex) {\n                            index++;\n                            parent.insertBefore(createMarker(), node);\n                        }\n                        lastPartIndex = index;\n                        this.parts.push({ type: 'node', index });\n                        // If we don't have a nextSibling, keep this node so we have an end.\n                        // Else, we can remove it to save future costs.\n                        if (node.nextSibling === null) {\n                            node.data = '';\n                        }\n                        else {\n                            nodesToRemove.push(node);\n                            index--;\n                        }\n                        partIndex++;\n                    }\n                    else {\n                        let i = -1;\n                        while ((i = node.data.indexOf(marker, i + 1)) !==\n                            -1) {\n                            // Comment node has a binding marker inside, make an inactive part\n                            // The binding won't work, but subsequent bindings will\n                            // TODO (justinfagnani): consider whether it's even worth it to\n                            // make bindings in comments work\n                            this.parts.push({ type: 'node', index: -1 });\n                        }\n                    }\n                }\n            }\n        };\n        _prepareTemplate(element);\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#attributes-0\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-character\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \\x09\\x0a\\x0c\\x0d\"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this._parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this._parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this._parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // When using the Custom Elements polyfill, clone the node, rather than\n        // importing it, to keep the fragment in the template's document. This\n        // leaves the fragment inert so custom elements won't upgrade and\n        // potentially modify their contents by creating a polyfilled ShadowRoot\n        // while we traverse the tree.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const parts = this.template.parts;\n        let partIndex = 0;\n        let nodeIndex = 0;\n        const _prepareInstance = (fragment) => {\n            // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be\n            // null\n            const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n            let node = walker.nextNode();\n            // Loop through all the nodes and parts of a template\n            while (partIndex < parts.length && node !== null) {\n                const part = parts[partIndex];\n                // Consecutive Parts may have the same node index, in the case of\n                // multiple bound attributes on an element. So each iteration we either\n                // increment the nodeIndex, if we aren't on a node with a part, or the\n                // partIndex if we are. By not incrementing the nodeIndex when we find a\n                // part, we allow for the next part to be associated with the current\n                // node if neccessasry.\n                if (!isTemplatePartActive(part)) {\n                    this._parts.push(undefined);\n                    partIndex++;\n                }\n                else if (nodeIndex === part.index) {\n                    if (part.type === 'node') {\n                        const part = this.processor.handleTextExpression(this.options);\n                        part.insertAfterNode(node.previousSibling);\n                        this._parts.push(part);\n                    }\n                    else {\n                        this._parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n                    }\n                    partIndex++;\n                }\n                else {\n                    nodeIndex++;\n                    if (node.nodeName === 'TEMPLATE') {\n                        _prepareInstance(node.content);\n                    }\n                    node = walker.nextNode();\n                }\n            }\n        };\n        _prepareInstance(fragment);\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const endIndex = this.strings.length - 1;\n        let html = '';\n        for (let i = 0; i < endIndex; i++) {\n            const s = this.strings[i];\n            // This exec() call does two things:\n            // 1) Appends a suffix to the bound attribute name to opt out of special\n            // attribute value parsing that IE11 and Edge do, like for style and\n            // many SVG attributes. The Template class also appends the same suffix\n            // when looking up attributes to create Parts.\n            // 2) Adds an unquoted-attribute-safe marker for the first expression in\n            // an attribute. Subsequent attribute expressions will use node markers,\n            // and this is safe since attributes with multiple expressions are\n            // guaranteed to be quoted.\n            const match = lastAttributeNameRegex.exec(s);\n            if (match) {\n                // We're starting a new bound attribute.\n                // Add the safe attribute suffix, and use unquoted-attribute-safe\n                // marker.\n                html += s.substr(0, match.index) + match[1] + match[2] +\n                    boundAttributeSuffix + match[3] + marker;\n            }\n            else {\n                // We're either in a bound node, or trailing bound attribute.\n                // Either way, nodeMarker is safe to use.\n                html += s + nodeMarker;\n            }\n        }\n        return html + this.strings[endIndex];\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        template.innerHTML = this.getHTML();\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTMl in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\n/**\n * Sets attribute values for AttributeParts, so that the value is only set once\n * even if there are multiple parts for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = this.parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (v != null &&\n                    (Array.isArray(v) ||\n                        // tslint:disable-next-line:no-any\n                        typeof v !== 'string' && v[Symbol.iterator])) {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n                else {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\nexport class AttributePart {\n    constructor(comitter) {\n        this.value = undefined;\n        this.committer = comitter;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this._pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Inserts this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part between `ref` and `ref`'s next sibling. Both `ref` and\n     * its next sibling must be static, unchanging nodes such as those that appear\n     * in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part._insert(this.startNode = createMarker());\n        part._insert(this.endNode = createMarker());\n    }\n    /**\n     * Appends this part after `ref`\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref._insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this._pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this._pendingValue)) {\n            const directive = this._pendingValue;\n            this._pendingValue = noChange;\n            directive(this);\n        }\n        const value = this._pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this._commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this._commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this._commitNode(value);\n        }\n        else if (Array.isArray(value) ||\n            // tslint:disable-next-line:no-any\n            value[Symbol.iterator]) {\n            this._commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this._commitText(value);\n        }\n    }\n    _insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    _commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this._insert(value);\n        this.value = value;\n    }\n    _commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = value;\n        }\n        else {\n            this._commitNode(document.createTextNode(typeof value === 'string' ? value : String(value)));\n        }\n        this.value = value;\n    }\n    _commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this._commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    _commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this._pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this._pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this._pendingValue)) {\n            const directive = this._pendingValue;\n            this._pendingValue = noChange;\n            directive(this);\n        }\n        if (this._pendingValue === noChange) {\n            return;\n        }\n        const value = !!this._pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n        }\n        this.value = value;\n        this._pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // tslint:disable-next-line:no-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\ntry {\n    const options = {\n        get capture() {\n            eventOptionsSupported = true;\n            return false;\n        }\n    };\n    // tslint:disable-next-line:no-any\n    window.addEventListener('test', options, options);\n    // tslint:disable-next-line:no-any\n    window.removeEventListener('test', options, options);\n}\ncatch (_e) {\n}\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this._pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this._boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this._pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this._pendingValue)) {\n            const directive = this._pendingValue;\n            this._pendingValue = noChange;\n            directive(this);\n        }\n        if (this._pendingValue === noChange) {\n            return;\n        }\n        const newListener = this._pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this._boundHandleEvent, this._options);\n        }\n        if (shouldAddListener) {\n            this._options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this._boundHandleEvent, this._options);\n        }\n        this.value = newListener;\n        this._pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const comitter = new PropertyCommitter(element, name.slice(1), strings);\n            return comitter.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const comitter = new AttributeCommitter(element, name, strings);\n        return comitter.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result a TemplateResult created by evaluating a template tag like\n *     `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.0.0');\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module shady-render\n */\nimport { isTemplatePartActive } from './template.js';\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(template, nodesToRemove) {\n    const { element: { content }, parts } = template;\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let part = parts[partIndex];\n    let nodeIndex = -1;\n    let removeCount = 0;\n    const nodesToRemoveInTemplate = [];\n    let currentRemovingNode = null;\n    while (walker.nextNode()) {\n        nodeIndex++;\n        const node = walker.currentNode;\n        // End removal if stepped past the removing node\n        if (node.previousSibling === currentRemovingNode) {\n            currentRemovingNode = null;\n        }\n        // A node to remove was found in the template\n        if (nodesToRemove.has(node)) {\n            nodesToRemoveInTemplate.push(node);\n            // Track node we're removing\n            if (currentRemovingNode === null) {\n                currentRemovingNode = node;\n            }\n        }\n        // When removing, increment count by which to adjust subsequent part indices\n        if (currentRemovingNode !== null) {\n            removeCount++;\n        }\n        while (part !== undefined && part.index === nodeIndex) {\n            // If part is in a removed node deactivate it by setting index to -1 or\n            // adjust the index as needed.\n            part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n            // go to the next active part.\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n            part = parts[partIndex];\n        }\n    }\n    nodesToRemoveInTemplate.forEach((n) => n.parentNode.removeChild(n));\n}\nconst countNodes = (node) => {\n    let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n    const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n    while (walker.nextNode()) {\n        count++;\n    }\n    return count;\n};\nconst nextActiveIndexInTemplateParts = (parts, startIndex = -1) => {\n    for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n            return i;\n        }\n    }\n    return -1;\n};\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(template, node, refNode = null) {\n    const { element: { content }, parts } = template;\n    // If there's no refNode, then put node at end of template.\n    // No part indices need to be shifted in this case.\n    if (refNode === null || refNode === undefined) {\n        content.appendChild(node);\n        return;\n    }\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let insertCount = 0;\n    let walkerIndex = -1;\n    while (walker.nextNode()) {\n        walkerIndex++;\n        const walkerNode = walker.currentNode;\n        if (walkerNode === refNode) {\n            insertCount = countNodes(node);\n            refNode.parentNode.insertBefore(node, refNode);\n        }\n        while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n            // If we've inserted the node, simply adjust all subsequent parts\n            if (insertCount > 0) {\n                while (partIndex !== -1) {\n                    parts[partIndex].index += insertCount;\n                    partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n                }\n                return;\n            }\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n    }\n}\n//# sourceMappingURL=modify-template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @module shady-render\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { removeNodes } from './dom.js';\nimport { insertNodeIntoTemplate, removeNodesFromTemplate } from './modify-template.js';\nimport { parts, render as litRender } from './render.js';\nimport { templateCaches } from './template-factory.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { marker, Template } from './template.js';\nexport { html, svg, TemplateResult } from '../lit-html.js';\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;\nlet compatibleShadyCSSVersion = true;\nif (typeof window.ShadyCSS === 'undefined') {\n    compatibleShadyCSSVersion = false;\n}\nelse if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n    console.warn(`Incompatible ShadyCSS version detected.` +\n        `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and` +\n        `@webcomponents/shadycss@1.3.1.`);\n    compatibleShadyCSSVersion = false;\n}\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nconst shadyTemplateFactory = (scopeName) => (result) => {\n    const cacheKey = getTemplateCacheKey(result.type, scopeName);\n    let templateCache = templateCaches.get(cacheKey);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(cacheKey, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    const key = result.strings.join(marker);\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n            window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n    }\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n};\nconst TEMPLATE_TYPES = ['html', 'svg'];\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName) => {\n    TEMPLATE_TYPES.forEach((type) => {\n        const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n        if (templates !== undefined) {\n            templates.keyString.forEach((template) => {\n                const { element: { content } } = template;\n                // IE 11 doesn't support the iterable param Set constructor\n                const styles = new Set();\n                Array.from(content.querySelectorAll('style')).forEach((s) => {\n                    styles.add(s);\n                });\n                removeNodesFromTemplate(template, styles);\n            });\n        }\n    });\n};\nconst shadyRenderSet = new Set();\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles = (renderedDOM, template, scopeName) => {\n    shadyRenderSet.add(scopeName);\n    // Move styles out of rendered DOM and store.\n    const styles = renderedDOM.querySelectorAll('style');\n    // If there are no styles, skip unnecessary work\n    if (styles.length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        window.ShadyCSS.prepareTemplateStyles(template.element, scopeName);\n        return;\n    }\n    const condensedStyle = document.createElement('style');\n    // Collect styles into a single style. This helps us make sure ShadyCSS\n    // manipulations will not prevent us from being able to fix up template\n    // part indices.\n    // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n    // currently does this anyway. When it does not, this should be changed.\n    for (let i = 0; i < styles.length; i++) {\n        const style = styles[i];\n        style.parentNode.removeChild(style);\n        condensedStyle.textContent += style.textContent;\n    }\n    // Remove styles from nested templates in this scope.\n    removeStylesFromLitTemplates(scopeName);\n    // And then put the condensed style into the \"root\" template passed in as\n    // `template`.\n    insertNodeIntoTemplate(template, condensedStyle, template.element.content.firstChild);\n    // Note, it's important that ShadyCSS gets the template that `lit-html`\n    // will actually render so that it can update the style inside when\n    // needed (e.g. @apply native Shadow DOM case).\n    window.ShadyCSS.prepareTemplateStyles(template.element, scopeName);\n    if (window.ShadyCSS.nativeShadow) {\n        // When in native Shadow DOM, re-add styling to rendered content using\n        // the style ShadyCSS produced.\n        const style = template.element.content.querySelector('style');\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n    }\n    else {\n        // When not in native Shadow DOM, at this point ShadyCSS will have\n        // removed the style from the lit template and parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        template.element.content.insertBefore(condensedStyle, template.element.content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n    }\n};\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render = (result, container, options) => {\n    const scopeName = options.scopeName;\n    const hasRendered = parts.has(container);\n    const needsScoping = container instanceof ShadowRoot &&\n        compatibleShadyCSSVersion && result instanceof TemplateResult;\n    // Handle first render to a scope specially...\n    const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n    // On first scope render, render into a fragment; this cannot be a single\n    // fragment that is reused since nested renders can occur synchronously.\n    const renderContainer = firstScopeRender ? document.createDocumentFragment() : container;\n    litRender(result, renderContainer, Object.assign({ templateFactory: shadyTemplateFactory(scopeName) }, options));\n    // When performing first scope render,\n    // (1) We've rendered into a fragment so that there's a chance to\n    // `prepareTemplateStyles` before sub-elements hit the DOM\n    // (which might cause them to render based on a common pattern of\n    // rendering in a custom element's `connectedCallback`);\n    // (2) Scope the template with ShadyCSS one time only for this scope.\n    // (3) Render the fragment into the container and make sure the\n    // container knows its `part` is the one we just rendered. This ensures\n    // DOM will be re-used on subsequent renders.\n    if (firstScopeRender) {\n        const part = parts.get(renderContainer);\n        parts.delete(renderContainer);\n        if (part.value instanceof TemplateInstance) {\n            prepareTemplateStyles(renderContainer, part.value.template, scopeName);\n        }\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n    }\n    // After elements have hit the DOM, update styling if this is the\n    // initial render to this container.\n    // This is needed whenever dynamic changes are made so it would be\n    // safest to do every render; however, this would regress performance\n    // so we leave it up to the user to call `ShadyCSSS.styleElement`\n    // for dynamic changes.\n    if (!hasRendered && needsScoping) {\n        window.ShadyCSS.styleElement(container.host);\n    }\n};\n//# sourceMappingURL=shady-render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    (prop, _obj) => prop;\nexport const defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value ? '' : null;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                return value == null ? value : JSON.stringify(value);\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value !== null;\n            case Number:\n                return value === null ? null : Number(value);\n            case Object:\n            case Array:\n                return JSON.parse(value);\n        }\n        return value;\n    }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual = (value, old) => {\n    // This ensures (old==NaN, value==NaN) always returns false\n    return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual\n};\nconst microtaskPromise = Promise.resolve(true);\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\nconst STATE_HAS_CONNECTED = 1 << 5;\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n */\nexport class UpdatingElement extends HTMLElement {\n    constructor() {\n        super();\n        this._updateState = 0;\n        this._instanceProperties = undefined;\n        this._updatePromise = microtaskPromise;\n        this._hasConnectedResolver = undefined;\n        /**\n         * Map with keys for any properties that have changed since the last\n         * update cycle with previous values.\n         */\n        this._changedProperties = new Map();\n        /**\n         * Map with keys of properties that should be reflected when updated.\n         */\n        this._reflectingProperties = undefined;\n        this.initialize();\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     */\n    static get observedAttributes() {\n        // note: piggy backing on this to ensure we're finalized.\n        this.finalize();\n        const attributes = [];\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this._classProperties.forEach((v, p) => {\n            const attr = this._attributeNameForProperty(p, v);\n            if (attr !== undefined) {\n                this._attributeToPropertyMap.set(attr, p);\n                attributes.push(attr);\n            }\n        });\n        return attributes;\n    }\n    /**\n     * Ensures the private `_classProperties` property metadata is created.\n     * In addition to `finalize` this is also called in `createProperty` to\n     * ensure the `@property` decorator can add property metadata.\n     */\n    /** @nocollapse */\n    static _ensureClassProperties() {\n        // ensure private storage for property declarations.\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n            this._classProperties = new Map();\n            // NOTE: Workaround IE11 not supporting Map constructor argument.\n            const superProperties = Object.getPrototypeOf(this)._classProperties;\n            if (superProperties !== undefined) {\n                superProperties.forEach((v, k) => this._classProperties.set(k, v));\n            }\n        }\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist.\n     * The property setter calls the property's `hasChanged` property option\n     * or uses a strict identity check to determine whether or not to request\n     * an update.\n     * @nocollapse\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // Note, since this can be called by the `@property` decorator which\n        // is called before `finalize`, we ensure storage exists for property\n        // metadata.\n        this._ensureClassProperties();\n        this._classProperties.set(name, options);\n        // Do not generate an accessor if the prototype already has one, since\n        // it would be lost otherwise and that would never be the user's intention;\n        // Instead, we expect users to call `requestUpdate` themselves from\n        // user-defined accessors. Note that if the super has an accessor we will\n        // still overwrite it\n        if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n            return;\n        }\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        Object.defineProperty(this.prototype, name, {\n            // tslint:disable-next-line:no-any no symbol in index\n            get() {\n                return this[key];\n            },\n            set(value) {\n                // tslint:disable-next-line:no-any no symbol in index\n                const oldValue = this[name];\n                // tslint:disable-next-line:no-any no symbol in index\n                this[key] = value;\n                this._requestUpdate(name, oldValue);\n            },\n            configurable: true,\n            enumerable: true\n        });\n    }\n    /**\n     * Creates property accessors for registered properties and ensures\n     * any superclasses are also finalized.\n     * @nocollapse\n     */\n    static finalize() {\n        if (this.hasOwnProperty(JSCompiler_renameProperty('finalized', this)) &&\n            this.finalized) {\n            return;\n        }\n        // finalize any superclasses\n        const superCtor = Object.getPrototypeOf(this);\n        if (typeof superCtor.finalize === 'function') {\n            superCtor.finalize();\n        }\n        this.finalized = true;\n        this._ensureClassProperties();\n        // initialize Map populated in observedAttributes\n        this._attributeToPropertyMap = new Map();\n        // make any properties\n        // Note, only process \"own\" properties since this element will inherit\n        // any properties defined on the superClass, and finalization ensures\n        // the entire prototype chain is finalized.\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            // support symbols in properties (IE11 does not support this)\n            const propKeys = [\n                ...Object.getOwnPropertyNames(props),\n                ...(typeof Object.getOwnPropertySymbols === 'function') ?\n                    Object.getOwnPropertySymbols(props) :\n                    []\n            ];\n            // This for/of is ok because propKeys is an array\n            for (const p of propKeys) {\n                // note, use of `any` is due to TypeSript lack of support for symbol in\n                // index types\n                // tslint:disable-next-line:no-any no symbol in index\n                this.createProperty(p, props[p]);\n            }\n        }\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static _attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false ?\n            undefined :\n            (typeof attribute === 'string' ?\n                attribute :\n                (typeof name === 'string' ? name.toLowerCase() : undefined));\n    }\n    /**\n     * Returns true if a property should request an update.\n     * Called when a property value is set and uses the `hasChanged`\n     * option for the property if present or a strict identity check.\n     * @nocollapse\n     */\n    static _valueHasChanged(value, old, hasChanged = notEqual) {\n        return hasChanged(value, old);\n    }\n    /**\n     * Returns the property value for the given attribute value.\n     * Called via the `attributeChangedCallback` and uses the property's\n     * `converter` or `converter.fromAttribute` property option.\n     * @nocollapse\n     */\n    static _propertyValueFromAttribute(value, options) {\n        const type = options.type;\n        const converter = options.converter || defaultConverter;\n        const fromAttribute = (typeof converter === 'function' ? converter : converter.fromAttribute);\n        return fromAttribute ? fromAttribute(value, type) : value;\n    }\n    /**\n     * Returns the attribute value for the given property value. If this\n     * returns undefined, the property will *not* be reflected to an attribute.\n     * If this returns null, the attribute will be removed, otherwise the\n     * attribute will be set to the value.\n     * This uses the property's `reflect` and `type.toAttribute` property options.\n     * @nocollapse\n     */\n    static _propertyValueToAttribute(value, options) {\n        if (options.reflect === undefined) {\n            return;\n        }\n        const type = options.type;\n        const converter = options.converter;\n        const toAttribute = converter && converter.toAttribute ||\n            defaultConverter.toAttribute;\n        return toAttribute(value, type);\n    }\n    /**\n     * Performs element initialization. By default captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        this._saveInstanceProperties();\n        // ensures first update will be caught by an early access of `updateComplete`\n        this._requestUpdate();\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    _saveInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.constructor\n            ._classProperties.forEach((_v, p) => {\n            if (this.hasOwnProperty(p)) {\n                const value = this[p];\n                delete this[p];\n                if (!this._instanceProperties) {\n                    this._instanceProperties = new Map();\n                }\n                this._instanceProperties.set(p, value);\n            }\n        });\n    }\n    /**\n     * Applies previously saved instance properties.\n     */\n    _applyInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        // tslint:disable-next-line:no-any\n        this._instanceProperties.forEach((v, p) => this[p] = v);\n        this._instanceProperties = undefined;\n    }\n    connectedCallback() {\n        this._updateState = this._updateState | STATE_HAS_CONNECTED;\n        // Ensure first connection completes an update. Updates cannot complete before\n        // connection and if one is pending connection the `_hasConnectionResolver`\n        // will exist. If so, resolve it to complete the update, otherwise\n        // requestUpdate.\n        if (this._hasConnectedResolver) {\n            this._hasConnectedResolver();\n            this._hasConnectedResolver = undefined;\n        }\n    }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     */\n    disconnectedCallback() {\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this._attributeToProperty(name, value);\n        }\n    }\n    _propertyToAttribute(name, value, options = defaultPropertyDeclaration) {\n        const ctor = this.constructor;\n        const attr = ctor._attributeNameForProperty(name, options);\n        if (attr !== undefined) {\n            const attrValue = ctor._propertyValueToAttribute(value, options);\n            // an undefined value does not change the attribute.\n            if (attrValue === undefined) {\n                return;\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n        }\n    }\n    _attributeToProperty(name, value) {\n        // Use tracking info to avoid deserializing attribute value if it was\n        // just set from a property setter.\n        if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n            return;\n        }\n        const ctor = this.constructor;\n        const propName = ctor._attributeToPropertyMap.get(name);\n        if (propName !== undefined) {\n            const options = ctor._classProperties.get(propName) || defaultPropertyDeclaration;\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n            this[propName] =\n                // tslint:disable-next-line:no-any\n                ctor._propertyValueFromAttribute(value, options);\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n        }\n    }\n    /**\n     * This private version of `requestUpdate` does not access or return the\n     * `updateComplete` promise. This promise can be overridden and is therefore\n     * not free to access.\n     */\n    _requestUpdate(name, oldValue) {\n        let shouldRequestUpdate = true;\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            const ctor = this.constructor;\n            const options = ctor._classProperties.get(name) || defaultPropertyDeclaration;\n            if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n                if (!this._changedProperties.has(name)) {\n                    this._changedProperties.set(name, oldValue);\n                }\n                // Add to reflecting properties set.\n                // Note, it's important that every change has a chance to add the\n                // property to `_reflectingProperties`. This ensures setting\n                // attribute + property reflects correctly.\n                if (options.reflect === true &&\n                    !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n                    if (this._reflectingProperties === undefined) {\n                        this._reflectingProperties = new Map();\n                    }\n                    this._reflectingProperties.set(name, options);\n                }\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                shouldRequestUpdate = false;\n            }\n        }\n        if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n            this._enqueueUpdate();\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should\n     * be called when an element should update based on some state not triggered\n     * by setting a property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored. Returns the `updateComplete` Promise which is resolved\n     * when the update completes.\n     *\n     * @param name {PropertyKey} (optional) name of requesting property\n     * @param oldValue {any} (optional) old value of requesting property\n     * @returns {Promise} A Promise that is resolved when the update completes.\n     */\n    requestUpdate(name, oldValue) {\n        this._requestUpdate(name, oldValue);\n        return this.updateComplete;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async _enqueueUpdate() {\n        // Mark state updating...\n        this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n        let resolve;\n        let reject;\n        const previousUpdatePromise = this._updatePromise;\n        this._updatePromise = new Promise((res, rej) => {\n            resolve = res;\n            reject = rej;\n        });\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await previousUpdatePromise;\n        }\n        catch (e) {\n            // Ignore any previous errors. We only care that the previous cycle is\n            // done. Any error should have been handled in the previous update.\n        }\n        // Make sure the element has connected before updating.\n        if (!this._hasConnected) {\n            await new Promise((res) => this._hasConnectedResolver = res);\n        }\n        try {\n            const result = this.performUpdate();\n            // If `performUpdate` returns a Promise, we await it. This is done to\n            // enable coordinating updates with a scheduler. Note, the result is\n            // checked to avoid delaying an additional microtask unless we need to.\n            if (result != null) {\n                await result;\n            }\n        }\n        catch (e) {\n            reject(e);\n        }\n        resolve(!this._hasRequestedUpdate);\n    }\n    get _hasConnected() {\n        return (this._updateState & STATE_HAS_CONNECTED);\n    }\n    get _hasRequestedUpdate() {\n        return (this._updateState & STATE_UPDATE_REQUESTED);\n    }\n    get hasUpdated() {\n        return (this._updateState & STATE_HAS_UPDATED);\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * You can override this method to change the timing of updates. If this\n     * method is overridden, `super.performUpdate()` must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```\n     * protected async performUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.performUpdate();\n     * }\n     * ```\n     */\n    performUpdate() {\n        // Mixin instance properties once, if they exist.\n        if (this._instanceProperties) {\n            this._applyInstanceProperties();\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.update(changedProperties);\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            throw e;\n        }\n        finally {\n            // Ensure element can accept additional updates after an exception.\n            this._markUpdated();\n        }\n        if (shouldUpdate) {\n            if (!(this._updateState & STATE_HAS_UPDATED)) {\n                this._updateState = this._updateState | STATE_HAS_UPDATED;\n                this.firstUpdated(changedProperties);\n            }\n            this.updated(changedProperties);\n        }\n    }\n    _markUpdated() {\n        this._changedProperties = new Map();\n        this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update. This getter can be implemented to\n     * await additional state. For example, it is sometimes useful to await a\n     * rendered element before fulfilling this Promise. To do this, first await\n     * `super.updateComplete` then any subsequent state.\n     *\n     * @returns {Promise} The Promise returns a boolean that indicates if the\n     * update resolved without triggering another update.\n     */\n    get updateComplete() {\n        return this._updatePromise;\n    }\n    /**\n     * Controls whether or not `update` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    update(_changedProperties) {\n        if (this._reflectingProperties !== undefined &&\n            this._reflectingProperties.size > 0) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this._reflectingProperties.forEach((v, k) => this._propertyToAttribute(k, this[k], v));\n            this._reflectingProperties = undefined;\n        }\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    updated(_changedProperties) {\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    firstUpdated(_changedProperties) {\n    }\n}\n/**\n * Marks class as having finished creating properties.\n */\nUpdatingElement.finalized = true;\n//# sourceMappingURL=updating-element.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst legacyCustomElement = (tagName, clazz) => {\n    window.customElements.define(tagName, clazz);\n    // Cast as any because TS doesn't recognize the return type as being a\n    // subtype of the decorated class when clazz is typed as\n    // `Constructor<HTMLElement>` for some reason.\n    // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n    // applied to elements however.\n    // tslint:disable-next-line:no-any\n    return clazz;\n};\nconst standardCustomElement = (tagName, descriptor) => {\n    const { kind, elements } = descriptor;\n    return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz) {\n            window.customElements.define(tagName, clazz);\n        }\n    };\n};\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * @param tagName the name of the custom element to define\n */\nexport const customElement = (tagName) => (classOrDescriptor) => (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\nconst standardProperty = (options, element) => {\n    // When decorating an accessor, pass it through and add property metadata.\n    // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n    // stomp over the user's accessor.\n    if (element.kind === 'method' && element.descriptor &&\n        !('value' in element.descriptor)) {\n        return Object.assign({}, element, { finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            } });\n    }\n    else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n            kind: 'field',\n            key: Symbol(),\n            placement: 'own',\n            descriptor: {},\n            // When @babel/plugin-proposal-decorators implements initializers,\n            // do this instead of the initializer below. See:\n            // https://github.com/babel/babel/issues/9260 extras: [\n            //   {\n            //     kind: 'initializer',\n            //     placement: 'own',\n            //     initializer: descriptor.initializer,\n            //   }\n            // ],\n            // tslint:disable-next-line:no-any decorator\n            initializer() {\n                if (typeof element.initializer === 'function') {\n                    this[element.key] = element.initializer.call(this);\n                }\n            },\n            finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            }\n        };\n    }\n};\nconst legacyProperty = (options, proto, name) => {\n    proto.constructor\n        .createProperty(name, options);\n};\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A `PropertyDeclaration` may optionally be\n * supplied to configure property features.\n *\n * @ExportDecoratedItems\n */\nexport function property(options) {\n    // tslint:disable-next-line:no-any decorator\n    return (protoOrDescriptor, name) => (name !== undefined) ?\n        legacyProperty(options, protoOrDescriptor, name) :\n        standardProperty(options, protoOrDescriptor);\n}\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @ExportDecoratedItems\n */\nexport function query(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @ExportDecoratedItems\n */\nexport function queryAll(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelectorAll(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\nconst legacyQuery = (descriptor, proto, name) => {\n    Object.defineProperty(proto, name, descriptor);\n};\nconst standardQuery = (descriptor, element) => ({\n    kind: 'method',\n    placement: 'prototype',\n    key: element.key,\n    descriptor,\n});\nconst standardEventOptions = (options, element) => {\n    return Object.assign({}, element, { finisher(clazz) {\n            Object.assign(clazz.prototype[element.key], options);\n        } });\n};\nconst legacyEventOptions = \n// tslint:disable-next-line:no-any legacy decorator\n(options, proto, name) => {\n    Object.assign(proto[name], options);\n};\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifis event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n *\n *     class MyElement {\n *\n *       clicked = false;\n *\n *       render() {\n *         return html`<div @click=${this._onClick}`><button></button></div>`;\n *       }\n *\n *       @eventOptions({capture: true})\n *       _onClick(e) {\n *         this.clicked = true;\n *       }\n *     }\n */\nexport const eventOptions = (options) => \n// Return value typed as any to prevent TypeScript from complaining that\n// standard decorator function signature does not match TypeScript decorator\n// signature\n// TODO(kschaaf): unclear why it was only failing on this decorator and not\n// the others\n((protoOrDescriptor, name) => (name !== undefined) ?\n    legacyEventOptions(options, protoOrDescriptor, name) :\n    standardEventOptions(options, protoOrDescriptor));\n//# sourceMappingURL=decorators.js.map","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nexport const supportsAdoptingStyleSheets = ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\nconst constructionToken = Symbol();\nexport class CSSResult {\n    constructor(cssText, safeToken) {\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n    }\n    // Note, this is a getter so that it's lazy. In practice, this means\n    // stylesheets are not created until the first element instance is made.\n    get styleSheet() {\n        if (this._styleSheet === undefined) {\n            // Note, if `adoptedStyleSheets` is supported then we assume CSSStyleSheet\n            // is constructable.\n            if (supportsAdoptingStyleSheets) {\n                this._styleSheet = new CSSStyleSheet();\n                this._styleSheet.replaceSync(this.cssText);\n            }\n            else {\n                this._styleSheet = null;\n            }\n        }\n        return this._styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\n/**\n * Wrap a value for interpolation in a css tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value) => {\n    return new CSSResult(String(value), constructionToken);\n};\nconst textFromCSSResult = (value) => {\n    if (value instanceof CSSResult) {\n        return value.cssText;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Template tag which which can be used with LitElement's `style` property to\n * set element styles. For security reasons, only literal string values may be\n * used. To incorporate non-literal values `unsafeCSS` may be used inside a\n * template string part.\n */\nexport const css = (strings, ...values) => {\n    const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, constructionToken);\n};\n//# sourceMappingURL=css-tag.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { TemplateResult } from 'lit-html';\nimport { render } from 'lit-html/lib/shady-render.js';\nimport { UpdatingElement } from './lib/updating-element.js';\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport { html, svg, TemplateResult, SVGTemplateResult } from 'lit-html/lit-html.js';\nimport { supportsAdoptingStyleSheets } from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.0.1');\n/**\n * Minimal implementation of Array.prototype.flat\n * @param arr the array to flatten\n * @param result the accumlated result\n */\nfunction arrayFlat(styles, result = []) {\n    for (let i = 0, length = styles.length; i < length; i++) {\n        const value = styles[i];\n        if (Array.isArray(value)) {\n            arrayFlat(value, result);\n        }\n        else {\n            result.push(value);\n        }\n    }\n    return result;\n}\n/** Deeply flattens styles array. Uses native flat if available. */\nconst flattenStyles = (styles) => styles.flat ? styles.flat(Infinity) : arrayFlat(styles);\nexport class LitElement extends UpdatingElement {\n    /** @nocollapse */\n    static finalize() {\n        super.finalize();\n        // Prepare styling that is stamped at first render time. Styling\n        // is built from user provided `styles` or is inherited from the superclass.\n        this._styles =\n            this.hasOwnProperty(JSCompiler_renameProperty('styles', this)) ?\n                this._getUniqueStyles() :\n                this._styles || [];\n    }\n    /** @nocollapse */\n    static _getUniqueStyles() {\n        // Take care not to call `this.styles` multiple times since this generates\n        // new CSSResults each time.\n        // TODO(sorvell): Since we do not cache CSSResults by input, any\n        // shared styles will generate new stylesheet objects, which is wasteful.\n        // This should be addressed when a browser ships constructable\n        // stylesheets.\n        const userStyles = this.styles;\n        const styles = [];\n        if (Array.isArray(userStyles)) {\n            const flatStyles = flattenStyles(userStyles);\n            // As a performance optimization to avoid duplicated styling that can\n            // occur especially when composing via subclassing, de-duplicate styles\n            // preserving the last item in the list. The last item is kept to\n            // try to preserve cascade order with the assumption that it's most\n            // important that last added styles override previous styles.\n            const styleSet = flatStyles.reduceRight((set, s) => {\n                set.add(s);\n                // on IE set.add does not return the set.\n                return set;\n            }, new Set());\n            // Array.from does not work on Set in IE\n            styleSet.forEach((v) => styles.unshift(v));\n        }\n        else if (userStyles) {\n            styles.push(userStyles);\n        }\n        return styles;\n    }\n    /**\n     * Performs element initialization. By default this calls `createRenderRoot`\n     * to create the element `renderRoot` node and captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        super.initialize();\n        this.renderRoot =\n            this.createRenderRoot();\n        // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n        // element's getRootNode(). While this could be done, we're choosing not to\n        // support this now since it would require different logic around de-duping.\n        if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n            this.adoptStyles();\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n    createRenderRoot() {\n        return this.attachShadow({ mode: 'open' });\n    }\n    /**\n     * Applies styling to the element shadowRoot using the `static get styles`\n     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n     * available and will fallback otherwise. When Shadow DOM is polyfilled,\n     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n     * is available but `adoptedStyleSheets` is not, styles are appended to the\n     * end of the `shadowRoot` to [mimic spec\n     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n     */\n    adoptStyles() {\n        const styles = this.constructor._styles;\n        if (styles.length === 0) {\n            return;\n        }\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it.\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map((s) => s.cssText), this.localName);\n        }\n        else if (supportsAdoptingStyleSheets) {\n            this.renderRoot.adoptedStyleSheets =\n                styles.map((s) => s.styleSheet);\n        }\n        else {\n            // This must be done after rendering so the actual style insertion is done\n            // in `update`.\n            this._needsShimAdoptedStyleSheets = true;\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        if (this.hasUpdated && window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    update(changedProperties) {\n        super.update(changedProperties);\n        const templateResult = this.render();\n        if (templateResult instanceof TemplateResult) {\n            this.constructor\n                .render(templateResult, this.renderRoot, { scopeName: this.localName, eventContext: this });\n        }\n        // When native Shadow DOM is used but adoptedStyles are not supported,\n        // insert styling after rendering to ensure adoptedStyles have highest\n        // priority.\n        if (this._needsShimAdoptedStyleSheets) {\n            this._needsShimAdoptedStyleSheets = false;\n            this.constructor._styles.forEach((s) => {\n                const style = document.createElement('style');\n                style.textContent = s.cssText;\n                this.renderRoot.appendChild(style);\n            });\n        }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method must return\n     * a lit-html TemplateResult. Setting properties inside this method will *not*\n     * trigger the element to update.\n     */\n    render() {\n    }\n}\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n */\nLitElement.finalized = true;\n/**\n * Render method used to render the lit-html TemplateResult to the element's\n * DOM.\n * @param {TemplateResult} Template to render.\n * @param {Element|DocumentFragment} Node into which to render.\n * @param {String} Element name.\n * @nocollapse\n */\nLitElement.render = render;\n//# sourceMappingURL=lit-element.js.map","/**\n@license\nCopyright (c) 2018 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/**\n  This is a JavaScript mixin that you can use to connect a Custom Element base\n  class to a Redux store. The `stateChanged(state)` method will be called when\n  the state is updated.\n\n  Example:\n\n      import { connect } from 'pwa-helpers/connect-mixin.js';\n\n      class MyElement extends connect(store)(HTMLElement) {\n        stateChanged(state) {\n          this.textContent = state.data.count.toString();\n        }\n      }\n*/\nexport const connect = (store) => (baseElement) => class extends baseElement {\n    connectedCallback() {\n        if (super.connectedCallback) {\n            super.connectedCallback();\n        }\n        this._storeUnsubscribe = store.subscribe(() => this.stateChanged(store.getState()));\n        this.stateChanged(store.getState());\n    }\n    disconnectedCallback() {\n        this._storeUnsubscribe();\n        if (super.disconnectedCallback) {\n            super.disconnectedCallback();\n        }\n    }\n    /**\n     * The `stateChanged(state)` method will be called when the state is updated.\n     */\n    stateChanged(_state) { }\n};\n//# sourceMappingURL=connect-mixin.js.map","/**\n@license\nCopyright (c) 2018 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/**\n  A Redux store enhancer that lets you lazy-install reducers after the store\n  has booted up. Use this if your application lazy-loads routes that are connected\n  to a Redux store.\n\n  Example:\n\n      import { combineReducers } from 'redux';\n      import { lazyReducerEnhancer } from 'pwa-helpers/lazy-reducer-enhancer.js';\n      import someReducer from './reducers/someReducer.js';\n\n      export const store = createStore(\n        (state, action) => state,\n        compose(lazyReducerEnhancer(combineReducers))\n      );\n\n  Then, in your page/element, you can lazy load a specific reducer with:\n\n      store.addReducers({\n        someReducer\n      });\n*/\nexport const lazyReducerEnhancer = (combineReducers) => {\n    const enhancer = (nextCreator) => {\n        return (origReducer, preloadedState) => {\n            let lazyReducers = {};\n            const nextStore = nextCreator(origReducer, preloadedState);\n            return Object.assign({}, nextStore, { addReducers(newReducers) {\n                    const combinedReducerMap = Object.assign({}, lazyReducers, newReducers);\n                    this.replaceReducer(combineReducers(lazyReducers = combinedReducerMap));\n                } });\n        };\n    };\n    return enhancer;\n};\n//# sourceMappingURL=lazy-reducer-enhancer.js.map","/**\n@license\nCopyright (c) 2018 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/**\n  Utility method that calls a callback whenever a media-query matches in response\n  to the viewport size changing. The callback should take a boolean parameter\n  (with `true` meaning the media query is matched).\n\n  Example:\n\n      import { installMediaQueryWatcher } from 'pwa-helpers/media-query.js';\n\n      installMediaQueryWatcher(`(min-width: 600px)`, (matches) => {\n        console.log(matches ? 'wide screen' : 'narrow sreen');\n      });\n*/\nexport const installMediaQueryWatcher = (mediaQuery, layoutChangedCallback) => {\n    let mql = window.matchMedia(mediaQuery);\n    mql.addListener((e) => layoutChangedCallback(e.matches));\n    layoutChangedCallback(mql.matches);\n};\n//# sourceMappingURL=media-query.js.map","/**\n@license\nCopyright (c) 2018 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/**\n  Utility method that updates the page's open graph and Twitter card metadata.\n  It takes an object as a parameter with the following properties:\n  title | description | url | image.\n\n  If the `url` is not specified, `window.location.href` will be used; for\n  all other properties, if they aren't specified, then that metadata field will not\n  be set.\n\n  Example (in your top level element or document, or in the router callback):\n\n      import { updateMetadata } from 'pwa-helpers/metadata.js';\n\n      updateMetadata({\n        title: 'My App - view 1',\n        description: 'This is my sample app',\n        url: window.location.href,\n        image: '/assets/view1-hero.png'\n      });\n\n*/\nexport const updateMetadata = ({ title, description, url, image, imageAlt }) => {\n    if (title) {\n        document.title = title;\n        setMetaTag('property', 'og:title', title);\n    }\n    if (description) {\n        setMetaTag('name', 'description', description);\n        setMetaTag('property', 'og:description', description);\n    }\n    if (image) {\n        setMetaTag('property', 'og:image', image);\n    }\n    if (imageAlt) {\n        setMetaTag('property', 'og:image:alt', imageAlt);\n    }\n    url = url || window.location.href;\n    setMetaTag('property', 'og:url', url);\n};\n/**\n  Utility method to create or update the content of a meta tag based on an\n  attribute name/value pair.\n\n  Example (in your top level element or document, or in the router callback):\n\n      import { setMetaTag } from 'pwa-helpers/metadata.js';\n\n      setMetaTag('name', 'twitter:card', 'summary');\n      \n  This would create the following meta tag in the head of the document (or\n  update the content attribute if a meta tag with name=\"twitter:card\" exists):\n\n      <meta name=\"twitter:card\" content=\"summary\">\n\n*/\nexport function setMetaTag(attrName, attrValue, content) {\n    let element = document.head.querySelector(`meta[${attrName}=\"${attrValue}\"]`);\n    if (!element) {\n        element = document.createElement('meta');\n        element.setAttribute(attrName, attrValue);\n        document.head.appendChild(element);\n    }\n    element.setAttribute('content', content || '');\n}\n//# sourceMappingURL=metadata.js.map","/**\n@license\nCopyright (c) 2018 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/**\n  Utility method that calls a callback whenever the network connectivity of the app changes.\n  The callback should take a boolean parameter (with `true` meaning\n  the network is offline, and `false` meaning online)\n\n  Example:\n\n      import { installOfflineWatcher } from 'pwa-helpers/network.js';\n\n      installOfflineWatcher((offline) => {\n        console.log('You are ' + offline ? ' offline' : 'online');\n      });\n*/\nexport const installOfflineWatcher = (offlineUpdatedCallback) => {\n    window.addEventListener('online', () => offlineUpdatedCallback(false));\n    window.addEventListener('offline', () => offlineUpdatedCallback(true));\n    offlineUpdatedCallback(navigator.onLine === false);\n};\n//# sourceMappingURL=network.js.map","/**\n@license\nCopyright (c) 2018 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/**\n  Basic router that calls a callback whenever the location is updated.\n\n  Example:\n\n      import { installRouter } from 'pwa-helpers/router.js';\n\n      installRouter((location) => handleNavigation(location));\n\n  For example, if you're using this router in a Redux-connected component,\n  you could dispatch an action in the callback:\n\n      import { installRouter } from 'pwa-helpers/router.js';\n      import { navigate } from '../actions/app.js';\n\n      installRouter((location) => store.dispatch(navigate(location)))\n\n  If you need to force a navigation to a new location programmatically, you can\n  do so by pushing a new state using the History API, and then manually\n  calling the callback with the new location:\n\n      window.history.pushState({}, '', '/new-route');\n      handleNavigation(window.location);\n\n  Optionally, you can use the second argument to read the event that caused the\n  navigation. For example, you may want to scroll to top only after a link click.\n\n      installRouter((location, event) => {\n        // Only scroll to top on link clicks, not popstate events.\n        if (event && event.type === 'click') {\n          window.scrollTo(0, 0);\n        }\n        handleNavigation(location);\n      });\n*/\nexport const installRouter = (locationUpdatedCallback) => {\n    document.body.addEventListener('click', e => {\n        if (e.defaultPrevented || e.button !== 0 ||\n            e.metaKey || e.ctrlKey || e.shiftKey)\n            return;\n        const anchor = e.composedPath().filter(n => n.tagName === 'A')[0];\n        if (!anchor || anchor.target ||\n            anchor.hasAttribute('download') ||\n            anchor.getAttribute('rel') === 'external')\n            return;\n        const href = anchor.href;\n        if (!href || href.indexOf('mailto:') !== -1)\n            return;\n        const location = window.location;\n        const origin = location.origin || location.protocol + '//' + location.host;\n        if (href.indexOf(origin) !== 0)\n            return;\n        e.preventDefault();\n        if (href !== location.href) {\n            window.history.pushState({}, '', href);\n            locationUpdatedCallback(location, e);\n        }\n    });\n    window.addEventListener('popstate', e => locationUpdatedCallback(window.location, e));\n    locationUpdatedCallback(window.location, null /* event */);\n};\n//# sourceMappingURL=router.js.map","/**\n@license\nCopyright (c) 2018 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nexport { connect } from './connect-mixin.js';\nexport { lazyReducerEnhancer } from './lazy-reducer-enhancer.js';\nexport { installMediaQueryWatcher } from './media-query.js';\nexport { setMetaTag, updateMetadata } from './metadata.js';\nexport { installOfflineWatcher } from './network.js';\nexport { installRouter } from './router.js';\n//# sourceMappingURL=pwa-helpers.js.map","export const LOG_IN = 'LOG_IN';\nexport const UPDATE_PATH = 'UPDATE_PATH';\nexport const ADD_FILMS = 'ADD_FILMS';\nexport const UPDATE_TOPIC = 'UPDATE_TOPIC';\nexport const DELETE_FILM = 'DELETE_FILM';\n\nexport const logIn = (logged) => {\n  return {\n    type: LOG_IN,\n    logged\n  };\n};\n\nexport const updatePath = (path) => {\n  return {\n    type: UPDATE_PATH,\n    path\n  };\n};\n\nexport const addFilms = (films) => {\n  return {\n    type: ADD_FILMS,\n    films\n  };\n};\n\nexport const updateTopic = (topic) => {\n  return {\n    type: UPDATE_TOPIC,\n    topic\n  };\n};\n\nexport const deleteFilm = (films, index) => {\n  return {\n    type: DELETE_FILM,\n    films,\n    index\n  };\n};\n","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","import $$observable from 'symbol-observable';\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error('It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error('You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected the listener to be a function.');\n    }\n\n    if (isDispatching) {\n      throw new Error('You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api-reference/store#subscribe(listener) for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error('You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api-reference/store#subscribe(listener) for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer;\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionDescription = actionType && \"action \\\"\" + String(actionType) + \"\\\"\" || 'an action';\n  return \"Given \" + actionDescription + \", reducer \\\"\" + key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\";\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle \" + ActionTypes.INIT + \" or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers);\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass a single function as the first argument,\n * and get a function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(\"bindActionCreators expected an object or a function, instead received \" + (actionCreators === null ? 'null' : typeof actionCreators) + \". \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var keys = Object.keys(actionCreators);\n  var boundActionCreators = {};\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error(\"Dispatching while constructing your middleware is not allowed. \" + \"Other middleware would not be applied to this dispatch.\");\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\n\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \"production\". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { createStore, combineReducers, bindActionCreators, applyMiddleware, compose, ActionTypes as __DO_NOT_USE__ActionTypes };\n","import {\n  UPDATE_PATH,\n  ADD_FILMS,\n  UPDATE_TOPIC,\n  DELETE_FILM\n} from './actions.js';\n\nconst INITIAL_STATE = {\n  path: '/',\n  topic: '',\n  films: []\n};\n\nexport const reducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case UPDATE_PATH:\n      return {\n        ...state,\n        path: action.path\n        };\n    case ADD_FILMS:\n      return {\n        ...state,\n        films: action.films\n        };\n    case UPDATE_TOPIC:\n      return {\n        ...state,\n        topic: action.topic\n      };\n    case DELETE_FILM:\n      action.films.splice(action.index, 1);\n      return {\n        ...state,\n        films: action.films\n      };\n    default:\n    return state;\n  }\n};","import { createStore } from 'redux';\nimport { reducer } from './reducer.js';\n\nexport const store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() \n);","import { LitElement, html } from 'lit-element';\nimport { connect } from 'pwa-helpers';\n\nimport { deleteFilm } from '../src/redux/actions.js';\nimport { store } from '../src/redux/store.js';\n\nclass ListElement extends connect(store)(LitElement) {\n  render() {\n    return html`\n      <div>\n        <style>\n          li {\n            margin: 20px;\n          }\n          .delete-btn {\n            padding: 2px 10px;\n            height: 6px;\n            background-color: red;\n            border-radius: 2px;\n            color: #fff;\n            cursor: pointer;\n          }\n        </style>\n\n        ${this.films === undefined ? html`<p>Nothing found !!!</p>` : ''}\n        <ul>\n          ${this.films !== undefined ?\n              this.films.map((item, i) => html`<li>${item.Title} <span class=\"delete-btn\" @click=\"${() => {store.dispatch(deleteFilm(this.films, i));}}\">-</span></li>`)\n              :\n              ''}\n        </ul>\n      </div>\n    `;\n  }\n  \n  static get properties() {\n    return {\n      films: {type: Array}\n    }\n  }\n}\n\ncustomElements.define('list-element', ListElement);","import { LitElement, html } from 'lit-element';\nimport './list-element.js';\nimport { connect } from 'pwa-helpers';\n\nimport { store } from '../src/redux/store.js';\nimport {\n  addFilms,\n  updateTopic\n} from '../src/redux/actions.js';\n\nclass FetcherElement extends connect(store)(LitElement) {\n  render() {\n    return html`\n      <div>\n        <div class=\"search-bar\">\n          <select>\n            <option value=\"payment\">Payment</option>\n            <option value=\"credit\">Credit</option>\n          </select>\n          <select>\n            <option value=\"EUR\">Payment</option>\n            <option value=\"JPY\">Credit</option>\n            <option value=\"USD\">Credit</option>\n          </select>\n        </div>\n        <input type=\"text\" placeholder='Type here...' .value=${this.topic} @input=${this.handleInput}>\n        <button @click=\"${this.doSearch}\">Search</button>\n\n        <list-element .films=${this.films}></list-element>\n        <p>${this.films.length}</p>\n      </div>\n      `;\n  }\n\n  stateChanged(state) {\n    this.topic = '';\n    this.films = [...state.films];\n  }\n  \n  static get properties() {\n    return {\n      topic: {type: String},\n      films: {type: Array}\n    }\n  }\n\n  handleInput(e) {\n    this.topic = e.target.value;\n  }\n\n  doSearch() {\n    if(this.topic !== '') {\n      fetch(`https://www.omdbapi.com/?s=${this.topic}&plot=full&apikey=e477ed6a`)\n        .then(response => response.json())\n        .then((myJson, topic = this.topic) => {\n          store.dispatch(addFilms(myJson.Search));\n          store.dispatch(updateTopic(topic));\n        })\n        .catch(error =>  console.log('Error: ', error));\n    }\n  }\n}\n\ncustomElements.define('fetcher-element', FetcherElement);","import { LitElement, html } from 'lit-element';\n\nimport { store } from '../src/redux/store.js';\nimport { connect } from 'pwa-helpers';\n\nclass StatsElement extends connect(store)(LitElement) {\n  render() {\n    return html`\n      <div>\n        <style>\n          stats-element {\n            display: block;\n          }\n        </style>\n\n        <h2>Stats</h2>\n\n        ${this.getChart()}\n      </div>\n    `;\n  }\n  \n  static get properties() {\n    return {\n      type: { type: String },\n      chartConfig: { type: Array },\n      hasFilms: { type: Boolean }\n    }\n  }\n  \n  stateChanged(state) {\n    if(state.films.length > 0) {\n      this.chartConfig = [ \n        { name: `Deleted ( ${(10 - state.films.length)} )`, y: 10 - state.films.length },\n        { name: `Stored ( ${state.films.length} )`, y: state.films.length }\n      ];\n    }\n\n    this.hasFilms = state.films.length > 0;\n  }\n  \n  getChart() {\n    if(this.hasFilms) {\n      return html`\n        <vaadin-chart type=\"${this.type}\">\n          <vaadin-chart-series\n            .values=\"${this.chartConfig}\"\n          ></vaadin-chart-series>\n        </vaadin-chart>\n        `\n    } else {\n      return html`\n        <p>Nothing to show yet! 🌴🍻☀️</p>\n      `;\n    }\n  }\n\n  constructor() {\n    super();\n    this.type = 'pie';\n  }\n}\n\ncustomElements.define('stats-element', StatsElement);","import { LitElement, html } from 'lit-element';\n\nclass AboutElement extends LitElement {\n  render() {\n    return html`\n      <div>\n        <style>\n          \n        </style>\n\n        <h2>About</h2>\n      </div>\n    `;\n  }\n  \n  static get properties() {\n    return {\n      \n    }\n  }\n}\n\ncustomElements.define('about-element', AboutElement);","import { Router } from '@vaadin/router';\n\nimport './src/fetcher-element.js';\nimport './src/stats-element.js';\nimport './src/about-element.js';\n\nwindow.addEventListener('load', () => { \n  initRouter();\n});\n\nfunction initRouter() {\n  const router = new Router(document.querySelector('main'));\n  router.setRoutes([\n    {\n      path: '/',\n      redirect: '/fetcher'\n    },\n    {\n      path: '/fetcher',\n      component: 'fetcher-element'\n    },\n    {\n      path: '/stats',\n      component: 'stats-element'\n    },\n    {\n      path: '/about',\n      component: 'about-element'\n    },\n    {\n      path: '(.*)', \n      component: 'not-found-view'\n    }\n  ]);\n}"],"names":["render","litRender","UPDATE_PATH","ADD_FILMS","UPDATE_TOPIC","DELETE_FILM","addFilms","films","type","updateTopic","topic","deleteFilm","index","symbolObservablePonyfill","root","result","Symbol","observable","self","window","global","module","Function","ponyfill","randomString","Math","random","toString","substring","split","join","ActionTypes","INIT","REPLACE","PROBE_UNKNOWN_ACTION","isPlainObject","obj","proto","Object","getPrototypeOf","createStore","reducer","preloadedState","enhancer","_ref2","arguments","Error","undefined","currentReducer","currentState","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","slice","getState","subscribe","listener","isSubscribed","push","unsubscribe","indexOf","splice","dispatch","action","listeners","i","length","replaceReducer","nextReducer","_ref","outerSubscribe","observer","TypeError","observeState","next","$$observable","warning","message","console","error","e","isCrushed","process","env","NODE_ENV","name","INITIAL_STATE","path","state","store","__REDUX_DEVTOOLS_EXTENSION__","ListElement","connect","LitElement","html","map","item","Title","properties","Array","customElements","define","FetcherElement","handleInput","doSearch","stateChanged","String","target","value","fetch","then","response","json","myJson","Search","catch","log","StatsElement","getChart","chartConfig","hasFilms","Boolean","y","constructor","AboutElement","addEventListener","initRouter","router","Router","document","querySelector","setRoutes","redirect","component"],"mappings":"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"}